{"ast":null,"code":"/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\n\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\n\n/**\r\n * Check if Blob constructor is supported\r\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n\n/**\r\n * Check if BlobBuilder is supported\r\n */\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\n\nfunction mapArrayBufferViews(ary) {\n  return ary.map(function (chunk) {\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n      return buf;\n    }\n    return chunk;\n  });\n}\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary).forEach(function (part) {\n    bb.append(part);\n  });\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n;\nfunction BlobConstructor(ary, options) {\n  return new Blob(mapArrayBufferViews(ary), options || {});\n}\n;\nif (typeof Blob !== 'undefined') {\n  BlobBuilderConstructor.prototype = Blob.prototype;\n  BlobConstructor.prototype = Blob.prototype;\n}\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","map":{"version":3,"names":["BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","a","Blob","size","e","blobSupportsArrayBufferView","b","Uint8Array","blobBuilderSupported","prototype","append","getBlob","mapArrayBufferViews","ary","map","chunk","buffer","ArrayBuffer","buf","byteLength","copy","set","byteOffset","BlobBuilderConstructor","options","bb","forEach","part","type","BlobConstructor","module","exports","undefined"],"sources":["C:/Users/think/Desktop/Projects/Chess Project/frontend/node_modules/blob/index.js"],"sourcesContent":["/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}