{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\think\\\\Desktop\\\\Projects\\\\Chess Project\\\\frontend\\\\chess-frontend\\\\src\\\\Components\\\\Room.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport GameBoard from './GameBoard';\nimport { useLocation } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const data = useLocation();\n  const data1 = fetch(CREATE_GAME_API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: \"white\"\n  }).then(response => response.json()).then(data => {\n    return data;\n  }).catch(error => console.error('Error:', error));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GameBoard, {\n      room: data.state.roomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Room, \"8Hh8xoLmbdSI2bv9CuVxzalNflE=\", false, function () {\n  return [useLocation];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","GameBoard","useLocation","Room","data","data1","fetch","CREATE_GAME_API_URL","method","headers","body","then","response","json","catch","error","console","state","roomId"],"sources":["C:/Users/think/Desktop/Projects/Chess Project/frontend/chess-frontend/src/Components/Room.jsx"],"sourcesContent":["import React from 'react';\r\nimport GameBoard from './GameBoard';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function Room() {\r\n  const data = useLocation();\r\n  const data1 = fetch(CREATE_GAME_API_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: \"white\"\r\n  })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data;\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n  return (\r\n    <>\r\n      <GameBoard room={data.state.roomId} />\r\n    </>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAAA;AAE/C,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAMC,IAAI,GAAGF,WAAW,EAAE;EAC1B,MAAMG,KAAK,GAAGC,KAAK,CAACC,mBAAmB,EAAE;IACvCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAE;EACR,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACP,IAAI,IAAI;IACZ,OAAOA,IAAI;EACb,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACjD,oBACE;IAAA,uBACE,QAAC,SAAS;MAAC,IAAI,EAAEX,IAAI,CAACa,KAAK,CAACC;IAAO;MAAA;MAAA;MAAA;IAAA;EAAG,iBACrC;AAEP;AAAC,GAnBuBf,IAAI;EAAA,QACbD,WAAW;AAAA;AAAA,KADFC,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}