{"ast":null,"code":"import _slicedToArray from\"C:/Users/think/Desktop/git_projects/chess_project/frontend/chess-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Navigate}from'react-router-dom';import GameBoard from'./GameBoard';import'./GamePage.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function GamePage(){var CREATE_GAME_API_URL=\"http://143.110.180.4:8080/api/create_game\";var ROOM_API_URL=\"http://143.110.180.4:8080/api/is_room_present\";var _useState=useState(''),_useState2=_slicedToArray(_useState,2),roomId=_useState2[0],setRoomId=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),gamecontent=_useState6[0],setGameContent=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),startGameRoomId=_useState8[0],setStartGameRoomId=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),navigateToRoom=_useState10[0],setNavigateToRoom=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),invalidRoomID=_useState12[0],setinvalidRoomID=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),errorMsg=_useState14[0],setErrorMsg=_useState14[1];function startGameHandler(){fetch(CREATE_GAME_API_URL,{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:\"white\"}).then(function(response){return response.json();}).then(function(data){setStartGameRoomId(data[\"room_id\"]);setGameContent(1);}).catch(function(error){return console.error('Error:',error);});}var handleSubmit=function handleSubmit(e){e.preventDefault();var color='W';setColor(color);fetch(ROOM_API_URL,{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:roomId}).then(function(response){return response.json();}).then(function(data){if(data[\"is_room_present\"]===\"true\"){//here we go into nested fetch if the room is present\nfetch(\"http://143.110.180.4:8080/api/num_clients\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:roomId}).then(function(response){return response.json();}).then(function(data){if(data[\"num_clients\"]<2){setinvalidRoomID(true);setNavigateToRoom(true);setErrorMsg(null);}else{setErrorMsg(\"Two Players are Aready Connected !! You cannot join this room !!!\");}}).catch(function(error){return console.error('Error:',error);});}else{setinvalidRoomID(false);}}).catch(function(error){return console.error('Error:',error);});};if(navigateToRoom&&navigateToRoom===true){return/*#__PURE__*/_jsx(Navigate,{to:\"/room\",state:{roomId:roomId,color:color}});}return/*#__PURE__*/_jsxs(\"div\",{children:[!gamecontent&&/*#__PURE__*/_jsxs(\"button\",{onClick:startGameHandler,children:[\" \",/*#__PURE__*/_jsx(\"b\",{children:\"Start New Game\"}),\" \"]}),gamecontent&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"roomMsg\",children:\"Use below room ID to join your game !!! Also send this room ID to your opponent to join.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"roomIdDisplay\",children:startGameRoomId})]}),/*#__PURE__*/_jsxs(\"form\",{action:\"submit\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"roomId\",children:[\" \",/*#__PURE__*/_jsxs(\"b\",{children:[\" \",/*#__PURE__*/_jsx(\"h1\",{children:\"Enter Room ID\"}),\" \"]}),\" \"]}),/*#__PURE__*/_jsx(\"input\",{value:roomId,onChange:function onChange(e){setRoomId(e.target.value);},type:\"text\",placeholder:\"\",id:\"roomId\",name:\"roomId\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",method:\"post\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Go To Room\"})})]}),/*#__PURE__*/_jsx(_Fragment,{children:invalidRoomID===false?/*#__PURE__*/_jsx(\"div\",{children:\"Invalid Room ID !!!! Please retry with another room ID\"}):/*#__PURE__*/_jsx(\"div\",{})}),/*#__PURE__*/_jsx(\"div\",{children:errorMsg})]});}","map":{"version":3,"names":["React","useState","useEffect","Navigate","GameBoard","GamePage","CREATE_GAME_API_URL","ROOM_API_URL","roomId","setRoomId","color","setColor","gamecontent","setGameContent","startGameRoomId","setStartGameRoomId","navigateToRoom","setNavigateToRoom","invalidRoomID","setinvalidRoomID","errorMsg","setErrorMsg","startGameHandler","fetch","method","headers","body","then","response","json","data","catch","error","console","handleSubmit","e","preventDefault","target","value"],"sources":["C:/Users/think/Desktop/git_projects/chess_project/frontend/chess-frontend/src/Components/GamePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\nimport GameBoard from './GameBoard';\r\nimport './GamePage.css'\r\n\r\nexport default function GamePage() {\r\n    const CREATE_GAME_API_URL = `http://143.110.180.4:8080/api/create_game`;\r\n    const ROOM_API_URL = `http://143.110.180.4:8080/api/is_room_present`;\r\n    const [roomId, setRoomId] = useState('');\r\n    const [color,setColor] = useState(null);\r\n    const [gamecontent, setGameContent] = useState(null);\r\n    const [startGameRoomId, setStartGameRoomId] = useState(null);\r\n    const [navigateToRoom, setNavigateToRoom] = useState(null);\r\n    const [invalidRoomID, setinvalidRoomID] = useState(null);\r\n    const [errorMsg,setErrorMsg] = useState(null);\r\n    function startGameHandler() {\r\n        fetch(CREATE_GAME_API_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: \"white\"\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setStartGameRoomId(data[\"room_id\"]);\r\n                setGameContent(1);\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const color = 'W';\r\n        setColor(color);\r\n        fetch(ROOM_API_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: roomId\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data[\"is_room_present\"] === \"true\") {\r\n                    //here we go into nested fetch if the room is present\r\n                    fetch(`http://143.110.180.4:8080/api/num_clients`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-type\": \"application/json\",\r\n                        },\r\n                        body: roomId\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            if ((data[\"num_clients\"] < 2)) {\r\n                                setinvalidRoomID(true);\r\n                                setNavigateToRoom(true);\r\n                                setErrorMsg(null);\r\n                            }\r\n                            else {\r\n                                \r\n                                setErrorMsg(\"Two Players are Aready Connected !! You cannot join this room !!!\");\r\n                            }\r\n                        })\r\n                        .catch(error => console.error('Error:', error));\r\n                    \r\n                }\r\n                else {\r\n                    setinvalidRoomID(false);\r\n                }\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n    };\r\n\r\n    if (navigateToRoom && navigateToRoom === true) {\r\n        return <Navigate to={\"/room\"} state={{ roomId, color }} />;\r\n    }\r\n    return (\r\n        <div>\r\n            {!gamecontent && <button onClick={startGameHandler}> <b>Start New Game</b> </button>}\r\n            {\r\n                gamecontent &&\r\n                <div>\r\n                    <div className='roomMsg'>\r\n                        Use below room ID to join your game !!! Also send this room ID to your opponent to join.\r\n                    </div>\r\n                    <br />\r\n                    <div className='roomIdDisplay'>{startGameRoomId}</div>\r\n                </div>\r\n            }\r\n            <form action=\"submit\" onSubmit={handleSubmit} >\r\n                <label htmlFor=\"roomId\"> <b> <h1>Enter Room ID</h1> </b> </label>\r\n                <input value={roomId} onChange={(e) => { setRoomId(e.target.value) }} type=\"text\" placeholder='' id='roomId' name='roomId' />\r\n                <button type=\"submit\" method=\"post\"><b>Go To Room</b></button>\r\n            </form>\r\n            <>\r\n                {\r\n                    (invalidRoomID === false) ? <div>Invalid Room ID !!!! Please retry with another room ID</div> : <div></div>\r\n                }\r\n            </>\r\n            <div>\r\n                {\r\n                    errorMsg\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}