{"ast":null,"code":"import _slicedToArray from\"C:/Users/think/Desktop/git_projects/chess_project/frontend/chess-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState,useEffect}from'react';import'./GameBoard.css';import Tile from'./Tile';import Referee from'./Referee';import{GRID_SIZE,horizontalAxis,verticalAxis}from'../constants';import io from'socket.io-client';import IP_ADDRESS from'../ip_add';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var piece={image:String,x:Number,y:Number,type:String,team:String,enPassant:Boolean};// array which holds the information regarding initial chess pieces and their \nvar initialBoardStateWhite=[];var initialBoardStateBlack=[];for(var p=0;p<2;p++){var teamType=p===0?\"opponent\":\"our\";var color=p===0?\"B\":\"W\";var pawns_x_cor=p===0?1:6;var main_piece_x_cor=p===0?0:7;//pawns\nfor(var i=0;i<8;++i){initialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_pawn.png\"),x:pawns_x_cor,y:i,type:\"pawn\",team:teamType});}//rooks\ninitialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_rook.png\"),x:main_piece_x_cor,y:0,type:\"rook\",team:teamType});initialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_rook.png\"),x:main_piece_x_cor,y:7,type:\"rook\",team:teamType});//knights\ninitialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_knight.png\"),x:main_piece_x_cor,y:1,type:\"knight\",team:teamType});initialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_knight.png\"),x:main_piece_x_cor,y:6,type:\"knight\",team:teamType});//bishops\ninitialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_bishop.png\"),x:main_piece_x_cor,y:2,type:\"bishop\",team:teamType});initialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_bishop.png\"),x:main_piece_x_cor,y:5,type:\"bishop\",team:teamType});//kings\ninitialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_king.png\"),x:main_piece_x_cor,y:4,type:\"king\",team:teamType});//queens\ninitialBoardStateWhite.push({image:\"assets/images/\".concat(color,\"_queen.png\"),x:main_piece_x_cor,y:3,type:\"queen\",team:teamType});}for(var _p=0;_p<2;_p++){var _teamType=_p===0?\"opponent\":\"our\";var _color=_p===0?\"W\":\"B\";var _pawns_x_cor=_p===0?1:6;var _main_piece_x_cor=_p===0?0:7;//pawns\nfor(var _i=0;_i<8;++_i){initialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_pawn.png\"),x:_pawns_x_cor,y:_i,type:\"pawn\",team:_teamType});}//rooks\ninitialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_rook.png\"),x:_main_piece_x_cor,y:0,type:\"rook\",team:_teamType});initialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_rook.png\"),x:_main_piece_x_cor,y:7,type:\"rook\",team:_teamType});//knights\ninitialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_knight.png\"),x:_main_piece_x_cor,y:1,type:\"knight\",team:_teamType});initialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_knight.png\"),x:_main_piece_x_cor,y:6,type:\"knight\",team:_teamType});//bishops\ninitialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_bishop.png\"),x:_main_piece_x_cor,y:2,type:\"bishop\",team:_teamType});initialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_bishop.png\"),x:_main_piece_x_cor,y:5,type:\"bishop\",team:_teamType});//kings\ninitialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_king.png\"),x:_main_piece_x_cor,y:3,type:\"king\",team:_teamType});//queens\ninitialBoardStateBlack.push({image:\"assets/images/\".concat(_color,\"_queen.png\"),x:_main_piece_x_cor,y:4,type:\"queen\",team:_teamType});}//the url where the web socket server is listening for connections\nvar SOCKET_URL=\"ws://\".concat(IP_ADDRESS,\":8085/\");// global socket object to use for communication with the server\nvar socket=io(SOCKET_URL);export default function GameBoard(_ref){var room=_ref.room,isBlack=_ref.isBlack;// this is a state variable that is used to determine the state of the game ,\n// we need to fetch this from the backend on component mount, but the fetching should be performed after 1 second  \nvar _useState=useState(\"not_started\"),_useState2=_slicedToArray(_useState,2),gameState=_useState2[0],setGameState=_useState2[1];// state variable to hold the number of clients joined at any given point of time\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),numClients=_useState4[0],setNumClients=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),gameOverDis=_useState6[0],setGameOverDis=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),enPassantAttackers=_useState8[0],setEnPassantAttackers=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),gameResult=_useState10[0],setGameResult=_useState10[1];// state variable to determine if the state is white or black\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isBlackState=_useState12[0],setIsBlackState=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),activePiece=_useState14[0],setActivePiece=_useState14[1];// const [gridX, setGridX] = useState(0);\n// const [gridY, setGridY] = useState(0);\n// const [pieces, setPieces] = useState(isBlack ? initialBoardStateBlack : initialBoardStateWhite);\nvar _useState15=useState(initialBoardStateWhite),_useState16=_slicedToArray(_useState15,2),pieces=_useState16[0],setPieces=_useState16[1];var chessBoardRef=useRef(null);var pawnPromotionModalRef=useRef(null);var referee=new Referee();var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),promotionPawn=_useState18[0],setPromotionPawn=_useState18[1];var gameStartButtonRef=useRef(null);var _useState19=useState(null),_useState20=_slicedToArray(_useState19,2),turn=_useState20[0],setTurn=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),dots=_useState22[0],setDots=_useState22[1];var _useState23=useState(null),_useState24=_slicedToArray(_useState23,2),enPassantAttackCoordinates=_useState24[0],setenPassantAttackCoordinates=_useState24[1];var _useState25=useState(null),_useState26=_slicedToArray(_useState25,2),castleRooks=_useState26[0],setCastleRooks=_useState26[1];// JOIN THE ROOM ON COMPONENT MOUNT + LEAVE THE ROOM ON Component Unmount\nuseEffect(function(){var color=\"white\";if(sessionStorage.getItem(room)!=null){color=sessionStorage.getItem(room);color===\"white\"?setIsBlackState(false):setIsBlackState(true);}socket.emit('joinRoomEvent',JSON.stringify({'room':\"\".concat(room),'color':\"\".concat(color)}));return function(){socket.emit('leaveRoomEvent',room);};},[]);useEffect(function(){setInterval(function(){fetch(\"http://\".concat(IP_ADDRESS,\":8080/api/num_clients\"),{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:room}).then(function(response){return response.json();}).then(function(data){setNumClients(data[\"num_clients\"]);}).catch(function(error){return console.error('Error:',error);});},1000);},[]);useEffect(function(){if(gameStartButtonRef){if(numClients!=2||gameState!='not_started'){if(!gameStartButtonRef.current.classList.contains('two_clients'))gameStartButtonRef.current.classList.add('two_clients');}else{if(gameStartButtonRef.current.classList.contains('two_clients'))gameStartButtonRef.current.classList.remove('two_clients');}}},[numClients,gameState]);useEffect(function(){if(gameState==\"completed\"){setGameOverDis(\"GAME IS OVER !!! PLEASE START NEW GAME !! \");}},[gameState]);socket.on(\"pieceInfo\",function(data){var jsondata=JSON.parse(data);setPieces(jsondata[\"pieces\"]);setGameState(jsondata[\"game_state\"]);if(jsondata[\"turn\"]!=\"NA\")setTurn(jsondata[\"turn\"]);});socket.on(\"newMoveUpdateServerToClient\",function(data){var jsondata=JSON.parse(data);setPieces(jsondata[\"pieces\"]);if(turn===\"white\")setTurn(\"black\");else setTurn(\"white\");});socket.on(\"gameEndEvent\",function(data){var jsondata=JSON.parse(data);var res=jsondata[\"result\"];var resDis=res===\"white\"?\"WHITE WON\":res===\"black\"?\"BLACK WON\":\"STALEMATE\";setGameResult(resDis);setGameState(\"completed\");//result will be (\"black\" / \"white\" / \"\")  --- FE TBD\n});socket.on(\"colorMsg\",function(data){data===\"white\"?setIsBlackState(false):setIsBlackState(true);data===\"white\"?setPieces(initialBoardStateWhite):setPieces(initialBoardStateBlack);setGameState(\"started\");setTurn(\"white\");sessionStorage.setItem(room,data);});function startGameHandler(){socket.emit('startGameEvent',room);}socket.on('enPassant',function(data){var jsondata=JSON.parse(data);var x=jsondata[\"x\"];var y=jsondata[\"y\"];var attackers=pieces.filter(function(p){return p.x===y&&p.type===\"pawn\"&&p.team===\"our\"&&Math.abs(p.y-x)===1;});setEnPassantAttackers(attackers);setEnPassant(true);setenPassantAttackCoordinates({x:x,y:y});});var _useState27=useState(null),_useState28=_slicedToArray(_useState27,2),pawnPromoteCoordinates=_useState28[0],setPawnPromoteCoordinates=_useState28[1];var _useState29=useState(null),_useState30=_slicedToArray(_useState29,2),enPassant=_useState30[0],setEnPassant=_useState30[1];function handlePawnPromotion(activePiece,x,y,captureFlag){setPromotionPawn(activePiece);setPawnPromoteCoordinates({x:y,y:x});pawnPromotionModalRef.current.classList.remove('hidden');}function normalMove(x,y){var a=dots.find(function(d){return d.i===x&&d.j===y;});if(a){if(activePiece&&activePiece.type===\"pawn\"&&(y===0||y===7)){handlePawnPromotion(activePiece,x,y,false);}else{if(activePiece.type===\"pawn\"&&Math.abs(activePiece.x-y)===2){socket.emit(\"eligibleForEnPassant\",JSON.stringify({room:room,x:x,y:y}));}var updatedPieces=[];pieces.forEach(function(p){if(p===activePiece){if(p.type===\"king\"){socket.emit('kingMove',JSON.stringify({'room':\"\".concat(room),'color':\"\".concat(isBlackState==true?\"black\":\"white\")}));}else if(p.type===\"rook\"&&p.x===7&&p.y===7){socket.emit('kingRookMove',JSON.stringify({'room':\"\".concat(room),'color':\"\".concat(isBlackState==true?\"black\":\"white\")}));}else if(p.type===\"rook\"&&p.x===7&&p.y===0){socket.emit('queenRookMove',JSON.stringify({'room':\"\".concat(room),'color':\"\".concat(isBlackState==true?\"black\":\"white\")}));}p.x=y;p.y=x;updatedPieces.push(p);}else{updatedPieces.push(p);}});setPieces(updatedPieces);setDots([]);socket.emit(\"newMoveToServer\",JSON.stringify({pieces:updatedPieces,room:room,color:isBlackState?\"black\":\"white\"}));if(referee.inCheck(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){if(referee.inCheckMate(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){socket.emit(\"checkmate\",JSON.stringify({room:room,color:isBlackState?\"black\":\"white\"}));}}else{if(referee.isStaleMate(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){socket.emit(\"stalemate\",JSON.stringify({room:room,color:isBlackState?\"black\":\"white\"}));}}if(turn===\"white\")setTurn(\"black\");else setTurn(\"white\");setActivePiece(null);setEnPassant(null);setEnPassantAttackers(null);setenPassantAttackCoordinates(null);setCastleRooks(null);}}}function captureMove(a){if(activePiece&&activePiece.type===\"pawn\"&&(a.j===0||a.j===7)){handlePawnPromotion(activePiece,a.i,a.j,true);}else{var updatedPieces=[];pieces.forEach(function(p){if(p===activePiece){if(p.type===\"king\"){socket.emit('kingMove',JSON.stringify({'room':\"\".concat(room),'color':\"\".concat(isBlackState==true?\"black\":\"white\")}));}else if(p.type===\"rook\"&&p.x===7&&p.y===7){socket.emit('kingRookMove',JSON.stringify({'room':\"\".concat(room),'color':\"\".concat(isBlackState==true?\"black\":\"white\")}));}else if(p.type===\"rook\"&&p.x===7&&p.y===0){socket.emit('queenRookMove',JSON.stringify({'room':\"\".concat(room),'color':\"\".concat(isBlackState==true?\"black\":\"white\")}));}if(enPassantAttackers){enPassantAttackers.forEach(function(attacker){if(attacker.x===p.x&&attacker.y===p.y&&enPassantAttackCoordinates.y===a.j&&enPassantAttackCoordinates.x===a.i){p.x=enPassantAttackCoordinates.y-1;p.y=enPassantAttackCoordinates.x;}});}else{p.x=a.j;p.y=a.i;}updatedPieces.push(p);}else{if(!(p.x===a.j&&p.y===a.i)){updatedPieces.push(p);}}});setPieces(updatedPieces);setDots([]);socket.emit(\"newMoveToServer\",JSON.stringify({pieces:updatedPieces,room:room,color:isBlackState?\"black\":\"white\"}));if(referee.inCheck(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){if(referee.inCheckMate(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){socket.emit(\"checkmate\",JSON.stringify({room:room,color:isBlackState?\"black\":\"white\"}));}}else{if(referee.isStaleMate(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){socket.emit(\"stalemate\",JSON.stringify({room:room,color:isBlackState?\"black\":\"white\"}));}}if(turn===\"white\")setTurn(\"black\");else setTurn(\"white\");setActivePiece(null);setEnPassant(null);setEnPassantAttackers(null);setenPassantAttackCoordinates(null);setCastleRooks(null);}}function validMovesDisplay(x,y){var currentPiece=pieces.find(function(p){return p.y===x&&p.x===y;});var dotsArr=[];for(var _i2=0;_i2<=7;++_i2){for(var j=0;j<=7;j++){var a=referee.isValidMove(y,x,j,_i2,currentPiece.type,currentPiece.team,pieces,true);if(a){var newBoardState=referee.getBoardStateAfterMove(currentPiece.x,currentPiece.y,_i2,j,pieces);if(!referee.inCheck(newBoardState,currentPiece.team)){dotsArr.push({i:_i2,j:j});}}}}if(enPassantAttackers){enPassantAttackers.forEach(function(p){if(p.x===currentPiece.x&&p.y===currentPiece.y){var _newBoardState=referee.getBoardStateAfterMove(currentPiece.x,currentPiece.y,enPassantAttackCoordinates.y,enPassantAttackCoordinates.x,pieces);if(!referee.inCheck(_newBoardState,currentPiece.team)){dotsArr.push({i:enPassantAttackCoordinates.x,j:enPassantAttackCoordinates.y});}}});}if(!referee.inCheck(pieces,\"our\")){if(currentPiece.type===\"king\"){var req=JSON.stringify({room:room,color:isBlackState==true?\"black\":\"white\"});fetch(\"http://\".concat(IP_ADDRESS,\":8080/api/castling\"),{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:req}).then(function(response){return response.json();}).then(function(data){if(isBlackState==false){console.log(data);console.log('got here');//white\n//king side \nvar kingSideSquares=[{x:5,y:7},{x:6,y:7}];var queenSideSquares=[{x:1,y:7},{x:2,y:7},{x:3,y:7}];var occupiedKingSide=false;var occupiedQueenSide=false;kingSideSquares.forEach(function(square){if(referee.isTileOccupied(square.x,square.y,pieces)){occupiedKingSide=true;}});console.log(occupiedKingSide);queenSideSquares.forEach(function(square){if(referee.isTileOccupied(square.x,square.y,pieces)){occupiedQueenSide=true;}});var rooks=[];if(!occupiedKingSide&&!areSquaresAttacked(kingSideSquares)&&data[\"king\"]===false&&data[\"kingRook\"]===false){console.log('we are eligible to castle king side for white');rooks.push(pieces.find(function(p){return p.x===7&&p.y===7;}));}if(!occupiedQueenSide&&!areSquaresAttacked(queenSideSquares)&&data[\"king\"]===false&&data[\"queenRook\"]===false){console.log('we are eligible to castle queen side for white');rooks.push(pieces.find(function(p){return p.x===7&&p.y===0;}));}setCastleRooks(rooks);}else{var _kingSideSquares=[{x:1,y:7},{x:2,y:7}];var _queenSideSquares=[{x:4,y:7},{x:5,y:7},{x:6,y:7}];var _occupiedKingSide=false;var _occupiedQueenSide=false;_kingSideSquares.forEach(function(square){if(referee.isTileOccupied(square.x,square.y,pieces)){_occupiedKingSide=true;}});_queenSideSquares.forEach(function(square){if(referee.isTileOccupied(square.x,square.y,pieces)){_occupiedQueenSide=true;}});var _rooks=[];if(!_occupiedKingSide&&!areSquaresAttacked(_kingSideSquares)&&data[\"king\"]===false&&data[\"queenRook\"]===false){console.log('we are eligible to castle king side for black');_rooks.push(pieces.find(function(p){return p.x===7&&p.y===0;}));}if(!_occupiedQueenSide&&!areSquaresAttacked(_queenSideSquares)&&data[\"king\"]===false&&data[\"kingRook\"]===false){console.log('we are eligible to castle queen side for black');_rooks.push(pieces.find(function(p){return p.x===7&&p.y===7;}));}setCastleRooks(_rooks);}}).catch(function(error){return console.error('Error:',error);});}else{setCastleRooks(null);}}setDots(dotsArr);setActivePiece(currentPiece);}function areSquaresAttacked(squares){var ret=false;squares.forEach(function(square){pieces.forEach(function(piece){if(piece.team===\"opponent\"){if(referee.isValidMove(piece.x,piece.y,square.y,square.x,piece.type,piece.team,pieces,false)){ret=true;}}});});return ret;}function grabPiece(e){if(!(gameState==\"completed\")){var chessboard=chessBoardRef.current;var element=e.target;var x=Math.floor((e.clientX-chessboard.offsetLeft)/GRID_SIZE);var y=Math.floor((e.clientY-chessboard.offsetTop)/GRID_SIZE);if(chessboard){if(!element.classList.contains(\"chess-piece\")){normalMove(x,y);}else{if(gameState===\"not_started\"){console.log(\"Please let the game begin to make moves\");// we need to develop UI for this \n}else{if(turn===\"black\"&&isBlackState===true||turn===\"white\"&&isBlackState===false){var a=dots.find(function(d){return d.i===x&&d.j===y;});if(a){captureMove(a);}else{if(castleRooks==null)validMovesDisplay(x,y);else{var castleFlag=false;console.log(\"x=\".concat(x));console.log(\"y=\".concat(y));castleRooks.forEach(function(castleRook){console.log(castleRook);if(castleRook.x===y&&castleRook.y===x){castleFlag=true;var updatedPieces=[];if(isBlackState===false){var kingS=false;pieces.forEach(function(p){if(p.x===y&&p.y===x){if(p.y===7){p.y=5;kingS=true;}else if(p.y===0){p.y=3;}updatedPieces.push(p);}else{if(!(p.x===7&&p.y===4)){updatedPieces.push(p);}else{kingS===true?p.y=6:p.y=2;updatedPieces.push(p);}}});}else{var _kingS=false;pieces.forEach(function(p){if(p.x===y&&p.y===x){console.log(p.y);if(p.y===7){p.y=4;}else if(p.y===0){p.y=2;_kingS=true;}updatedPieces.push(p);}else{if(!(p.x===7&&p.y===3)){updatedPieces.push(p);}else{_kingS===true?p.y=1:p.y=5;updatedPieces.push(p);}}});}setPieces(updatedPieces);setDots([]);socket.emit('kingMove',JSON.stringify({'room':\"\".concat(room),'color':\"\".concat(isBlackState==true?\"black\":\"white\")}));socket.emit(\"newMoveToServer\",JSON.stringify({pieces:updatedPieces,room:room,color:isBlackState?\"black\":\"white\"}));if(referee.inCheck(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){if(referee.inCheckMate(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){socket.emit(\"checkmate\",JSON.stringify({room:room,color:isBlackState?\"black\":\"white\"}));}}else{if(referee.isStaleMate(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){socket.emit(\"stalemate\",JSON.stringify({room:room,color:isBlackState?\"black\":\"white\"}));}}if(turn===\"white\")setTurn(\"black\");else setTurn(\"white\");setActivePiece(null);setEnPassant(null);setEnPassantAttackers(null);setenPassantAttackCoordinates(null);setCastleRooks(null);}});if(!castleFlag){validMovesDisplay(x,y);}}}}}}}}}function promotePawn(type){if(promotionPawn){var updatedPieces=[];pieces.forEach(function(piece){if(promotionPawn===piece){piece.type=type;piece.image=!isBlackState?piece.team===\"our\"?\"/assets/images/W_\".concat(type,\".png\"):\"/assets/images/B_\".concat(type,\".png\"):piece.team===\"our\"?\"/assets/images/B_\".concat(type,\".png\"):\"/assets/images/W_\".concat(type,\".png\");piece.x=pawnPromoteCoordinates.x;piece.y=pawnPromoteCoordinates.y;updatedPieces.push(piece);}else{if(!(piece.x===pawnPromoteCoordinates.x&&piece.y===pawnPromoteCoordinates.y))updatedPieces.push(piece);}});setPieces(updatedPieces);setDots([]);socket.emit(\"newMoveToServer\",JSON.stringify({pieces:updatedPieces,room:room,color:isBlackState?\"black\":\"white\"}));if(referee.inCheck(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){if(referee.inCheckMate(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){socket.emit(\"checkmate\",JSON.stringify({room:room,color:isBlackState?\"black\":\"white\"}));}}else{if(referee.isStaleMate(updatedPieces,activePiece.team===\"our\"?\"opponent\":\"our\")===true){socket.emit(\"stalemate\",JSON.stringify({room:room,color:isBlackState?\"black\":\"white\"}));}}if(turn===\"white\")setTurn(\"black\");else setTurn(\"white\");setActivePiece(null);setPawnPromoteCoordinates(null);setPromotionPawn(null);setEnPassant(null);setEnPassantAttackers(null);setenPassantAttackCoordinates(null);setCastleRooks(null);pawnPromotionModalRef.current.classList.add('hidden');}}function promotionTeamType(){if(promotionPawn)return!isBlackState?promotionPawn.team===\"our\"?\"W\":\"B\":promotionPawn.team===\"our\"?\"B\":\"W\";}var board=[];var _loop=function _loop(i){var _loop2=function _loop2(j){var image=undefined;pieces.forEach(function(p){if(p.x===i&&p.y===j)image=p.image;});var dotsfound=dots.find(function(d){return d.i===j&&d.j===i;});board.push(/*#__PURE__*/_jsx(Tile,{isDotted:dotsfound?true:false,num:i*i+j,image:image}));};for(var j=0;j<horizontalAxis.length;++j){_loop2(j);}};for(var _i3=0;_i3<verticalAxis.length;++_i3){_loop(_i3);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"pawn-promotion-modal\",className:\"hidden\",ref:pawnPromotionModalRef,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return promotePawn(\"rook\");},src:\"/assets/images/\".concat(promotionTeamType(),\"_rook.png\")}),/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return promotePawn(\"queen\");},src:\"/assets/images/\".concat(promotionTeamType(),\"_queen.png\")}),/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return promotePawn(\"knight\");},src:\"/assets/images/\".concat(promotionTeamType(),\"_knight.png\")}),/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return promotePawn(\"bishop\");},src:\"/assets/images/\".concat(promotionTeamType(),\"_bishop.png\")})]})}),/*#__PURE__*/_jsx(\"div\",{/*onMouseMove={e =>  movePiece(e)}*/onPointerDown:function onPointerDown(e){return grabPiece(e);}/*onMouseUp={e => dropPiece(e)}*/,id:\"gameboard\",ref:chessBoardRef,children:board}),/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsxs(\"b\",{children:[\"Number of Clients  = \",numClients]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{ref:gameStartButtonRef,onClick:startGameHandler,children:\"Start Game\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"turnDis\",children:[turn,\"'s  Turn\"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"b\",{children:[\" Result = \",gameResult]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"b\",{children:[\" \",gameOverDis]})})]});}","map":{"version":3,"names":["React","useRef","useState","useEffect","Tile","Referee","GRID_SIZE","horizontalAxis","verticalAxis","io","IP_ADDRESS","piece","image","String","x","Number","y","type","team","enPassant","Boolean","initialBoardStateWhite","initialBoardStateBlack","p","teamType","color","pawns_x_cor","main_piece_x_cor","i","push","SOCKET_URL","socket","GameBoard","room","isBlack","gameState","setGameState","numClients","setNumClients","gameOverDis","setGameOverDis","enPassantAttackers","setEnPassantAttackers","gameResult","setGameResult","isBlackState","setIsBlackState","activePiece","setActivePiece","pieces","setPieces","chessBoardRef","pawnPromotionModalRef","referee","promotionPawn","setPromotionPawn","gameStartButtonRef","turn","setTurn","dots","setDots","enPassantAttackCoordinates","setenPassantAttackCoordinates","castleRooks","setCastleRooks","sessionStorage","getItem","emit","JSON","stringify","setInterval","fetch","method","headers","body","then","response","json","data","catch","error","console","current","classList","contains","add","remove","on","jsondata","parse","res","resDis","setItem","startGameHandler","attackers","filter","Math","abs","setEnPassant","pawnPromoteCoordinates","setPawnPromoteCoordinates","handlePawnPromotion","captureFlag","normalMove","a","find","d","j","updatedPieces","forEach","inCheck","inCheckMate","isStaleMate","captureMove","attacker","validMovesDisplay","currentPiece","dotsArr","isValidMove","newBoardState","getBoardStateAfterMove","req","log","kingSideSquares","queenSideSquares","occupiedKingSide","occupiedQueenSide","square","isTileOccupied","rooks","areSquaresAttacked","squares","ret","grabPiece","e","chessboard","element","target","floor","clientX","offsetLeft","clientY","offsetTop","castleFlag","castleRook","kingS","promotePawn","promotionTeamType","board","undefined","dotsfound","length"],"sources":["C:/Users/think/Desktop/git_projects/chess_project/frontend/chess-frontend/src/Components/GameBoard.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport './GameBoard.css'\r\nimport Tile from './Tile';\r\nimport Referee from './Referee';\r\nimport { GRID_SIZE, horizontalAxis, verticalAxis } from '../constants';\r\nimport io from 'socket.io-client';\r\nimport IP_ADDRESS from '../ip_add';\r\n\r\nexport let piece = {\r\n  image: String,\r\n  x: Number,\r\n  y: Number,\r\n  type: String,\r\n  team: String,\r\n  enPassant: Boolean\r\n}\r\n\r\n// array which holds the information regarding initial chess pieces and their \r\nconst initialBoardStateWhite = [];\r\n\r\nconst initialBoardStateBlack = [];\r\n\r\n\r\n\r\nfor (let p = 0; p < 2; p++) {\r\n  const teamType = (p === 0) ? \"opponent\" : \"our\";\r\n  const color =  ((p === 0) ? \"B\" : \"W\");\r\n  const pawns_x_cor = (p === 0) ? 1 : 6;\r\n  const main_piece_x_cor = (p === 0) ? 0 : 7;\r\n  //pawns\r\n  for (let i = 0; i < 8; ++i) {\r\n    initialBoardStateWhite.push({ image: `assets/images/${color}_pawn.png`, x: pawns_x_cor, y: i, type: \"pawn\", team: teamType });\r\n  }\r\n  //rooks\r\n  initialBoardStateWhite.push({ image: `assets/images/${color}_rook.png`, x: main_piece_x_cor, y: 0, type: \"rook\", team: teamType });\r\n  initialBoardStateWhite.push({ image: `assets/images/${color}_rook.png`, x: main_piece_x_cor, y: 7, type: \"rook\", team: teamType });\r\n  //knights\r\n  initialBoardStateWhite.push({ image: `assets/images/${color}_knight.png`, x: main_piece_x_cor, y: 1, type: \"knight\", team: teamType });\r\n  initialBoardStateWhite.push({ image: `assets/images/${color}_knight.png`, x: main_piece_x_cor, y: 6, type: \"knight\", team: teamType });\r\n  //bishops\r\n  initialBoardStateWhite.push({ image: `assets/images/${color}_bishop.png`, x: main_piece_x_cor, y: 2, type: \"bishop\", team: teamType });\r\n  initialBoardStateWhite.push({ image: `assets/images/${color}_bishop.png`, x: main_piece_x_cor, y: 5, type: \"bishop\", team: teamType });\r\n  //kings\r\n  initialBoardStateWhite.push({ image: `assets/images/${color}_king.png`, x: main_piece_x_cor, y: 4, type: \"king\", team: teamType });\r\n  //queens\r\n  initialBoardStateWhite.push({ image: `assets/images/${color}_queen.png`, x: main_piece_x_cor, y: 3, type: \"queen\", team: teamType });\r\n}\r\n\r\nfor (let p = 0; p < 2; p++) {\r\n  const teamType = (p === 0) ? \"opponent\" : \"our\";\r\n  const color =  ((p === 0) ? \"W\" : \"B\");\r\n  const pawns_x_cor = (p === 0) ? 1 : 6;\r\n  const main_piece_x_cor = (p === 0) ? 0 : 7;\r\n  //pawns\r\n  for (let i = 0; i < 8; ++i) {\r\n    initialBoardStateBlack.push({ image: `assets/images/${color}_pawn.png`, x: pawns_x_cor, y: i, type: \"pawn\", team: teamType });\r\n  }\r\n  //rooks\r\n  initialBoardStateBlack.push({ image: `assets/images/${color}_rook.png`, x: main_piece_x_cor, y: 0, type: \"rook\", team: teamType });\r\n  initialBoardStateBlack.push({ image: `assets/images/${color}_rook.png`, x: main_piece_x_cor, y: 7, type: \"rook\", team: teamType });\r\n  //knights\r\n  initialBoardStateBlack.push({ image: `assets/images/${color}_knight.png`, x: main_piece_x_cor, y: 1, type: \"knight\", team: teamType });\r\n  initialBoardStateBlack.push({ image: `assets/images/${color}_knight.png`, x: main_piece_x_cor, y: 6, type: \"knight\", team: teamType });\r\n  //bishops\r\n  initialBoardStateBlack.push({ image: `assets/images/${color}_bishop.png`, x: main_piece_x_cor, y: 2, type: \"bishop\", team: teamType });\r\n  initialBoardStateBlack.push({ image: `assets/images/${color}_bishop.png`, x: main_piece_x_cor, y: 5, type: \"bishop\", team: teamType });\r\n  //kings\r\n  initialBoardStateBlack.push({ image: `assets/images/${color}_king.png`, x: main_piece_x_cor, y: 3, type: \"king\", team: teamType });\r\n  //queens\r\n  initialBoardStateBlack.push({ image: `assets/images/${color}_queen.png`, x: main_piece_x_cor, y: 4, type: \"queen\", team: teamType });\r\n}\r\n\r\n//the url where the web socket server is listening for connections\r\nconst SOCKET_URL = `ws://${IP_ADDRESS}:8085/`;\r\n\r\n// global socket object to use for communication with the server\r\nconst socket = io(SOCKET_URL);\r\n\r\n\r\nexport default function GameBoard({ room, isBlack }) {\r\n  // this is a state variable that is used to determine the state of the game ,\r\n  // we need to fetch this from the backend on component mount, but the fetching should be performed after 1 second  \r\n  const [gameState, setGameState] = useState(\"not_started\");\r\n\r\n  // state variable to hold the number of clients joined at any given point of time\r\n  const [numClients, setNumClients] = useState(0);\r\n\r\n  const [gameOverDis,setGameOverDis] = useState(null);\r\n\r\n  const [enPassantAttackers, setEnPassantAttackers] = useState(null);\r\n\r\n  const [gameResult,setGameResult] = useState(null);\r\n\r\n  // state variable to determine if the state is white or black\r\n  const [isBlackState, setIsBlackState] = useState(false);\r\n\r\n\r\n  const [activePiece, setActivePiece] = useState(null);\r\n  // const [gridX, setGridX] = useState(0);\r\n  // const [gridY, setGridY] = useState(0);\r\n  // const [pieces, setPieces] = useState(isBlack ? initialBoardStateBlack : initialBoardStateWhite);\r\n  const [pieces, setPieces] = useState(initialBoardStateWhite);\r\n  const chessBoardRef = useRef(null);\r\n  const pawnPromotionModalRef = useRef(null);\r\n  const referee = new Referee();\r\n  const [promotionPawn, setPromotionPawn] = useState(null);\r\n  const gameStartButtonRef = useRef(null);\r\n  const [turn, setTurn] = useState(null);\r\n  const [dots, setDots] = useState([]);\r\n  const [enPassantAttackCoordinates,setenPassantAttackCoordinates] = useState(null);\r\n  const [castleRooks,setCastleRooks] = useState(null);\r\n\r\n\r\n  // JOIN THE ROOM ON COMPONENT MOUNT + LEAVE THE ROOM ON Component Unmount\r\n  useEffect(() => {\r\n    let color = \"white\";\r\n    if (sessionStorage.getItem(room) != null) {\r\n      color = sessionStorage.getItem(room);\r\n      color === \"white\" ? setIsBlackState(false) : setIsBlackState(true);\r\n    }\r\n    socket.emit('joinRoomEvent', JSON.stringify({ 'room': `${room}`, 'color': `${color}` }));\r\n    return () => {\r\n      socket.emit('leaveRoomEvent', room);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      fetch(`http://${IP_ADDRESS}:8080/api/num_clients`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: room\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setNumClients(data[\"num_clients\"]);\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (gameStartButtonRef) {\r\n      if (numClients != 2 || gameState != 'not_started') {\r\n        if (!gameStartButtonRef.current.classList.contains('two_clients'))\r\n          gameStartButtonRef.current.classList.add('two_clients');\r\n      }\r\n      else {\r\n        if (gameStartButtonRef.current.classList.contains('two_clients'))\r\n          gameStartButtonRef.current.classList.remove('two_clients');\r\n      }\r\n    }\r\n  }, [numClients, gameState]);\r\n\r\n  useEffect(() => {\r\n    if (gameState == \"completed\") {\r\n      setGameOverDis(\"GAME IS OVER !!! PLEASE START NEW GAME !! \")\r\n    }\r\n  }, [gameState]);\r\n\r\n  socket.on(\"pieceInfo\", (data) => {\r\n    const jsondata = JSON.parse(data);\r\n    setPieces(jsondata[\"pieces\"]);\r\n    setGameState(jsondata[\"game_state\"]);\r\n    if(jsondata[\"turn\"] != \"NA\")\r\n    setTurn(jsondata[\"turn\"])\r\n  });\r\n\r\n  socket.on(\"newMoveUpdateServerToClient\", (data) => {\r\n    const jsondata = JSON.parse(data);\r\n    setPieces(jsondata[\"pieces\"]);\r\n    if(turn === \"white\")\r\n    setTurn(\"black\");\r\n    else\r\n    setTurn(\"white\")\r\n  });\r\n\r\n  socket.on(\"gameEndEvent\", (data) => {\r\n    const jsondata = JSON.parse(data);\r\n    const res = jsondata[\"result\"];\r\n    const resDis = (res === \"white\") ? \"WHITE WON\" : ((res === \"black\") ? \"BLACK WON\" : \"STALEMATE\");\r\n    setGameResult(resDis);\r\n    setGameState(\"completed\");\r\n    //result will be (\"black\" / \"white\" / \"\")  --- FE TBD\r\n  });\r\n\r\n  socket.on(\"colorMsg\", (data) => {\r\n    (data === \"white\") ? setIsBlackState(false) : setIsBlackState(true);\r\n    (data === \"white\") ? setPieces(initialBoardStateWhite) : setPieces(initialBoardStateBlack);\r\n    setGameState(\"started\");\r\n    setTurn(\"white\");\r\n    sessionStorage.setItem(room, data);\r\n  });\r\n\r\n  function startGameHandler() {\r\n    socket.emit('startGameEvent', room);\r\n  }\r\n\r\n  socket.on('enPassant', (data) => {\r\n    const jsondata = JSON.parse(data);\r\n    const x = jsondata[\"x\"];\r\n    const y = jsondata[\"y\"];\r\n    const attackers = pieces.filter(p=> (p.x === y) && (p.type === \"pawn\") && (p.team === \"our\") && Math.abs(p.y-x) === 1);\r\n    setEnPassantAttackers(attackers);\r\n    setEnPassant(true);\r\n    setenPassantAttackCoordinates({x:x,y:y});\r\n  })\r\n\r\n  const [pawnPromoteCoordinates,setPawnPromoteCoordinates] = useState(null);\r\n  const [enPassant,setEnPassant] = useState(null);\r\n\r\n  function handlePawnPromotion(activePiece,x,y,captureFlag)\r\n  {\r\n    setPromotionPawn(activePiece);\r\n    setPawnPromoteCoordinates({x:y,y:x});\r\n    pawnPromotionModalRef.current.classList.remove('hidden');\r\n  }\r\n\r\n  function normalMove(x, y) {\r\n    const a = dots.find((d) => d.i === x && d.j === y);\r\n    if (a) {\r\n      if(activePiece && activePiece.type === \"pawn\" && (y=== 0 || y=== 7))\r\n      {\r\n        handlePawnPromotion(activePiece,x,y,false);\r\n      }\r\n      else\r\n      {\r\n        if(activePiece.type === \"pawn\" && Math.abs(activePiece.x-y) === 2)\r\n        {\r\n          socket.emit(\"eligibleForEnPassant\",JSON.stringify({room:room,x:x,y:y}));\r\n        }\r\n        const updatedPieces = [];\r\n        pieces.forEach((p) => {\r\n          if (p === activePiece) {\r\n            if(p.type === \"king\")\r\n            {\r\n              socket.emit('kingMove',JSON.stringify({ 'room': `${room}`, 'color': `${(isBlackState == true)?\"black\":\"white\"}`}));\r\n            }\r\n            else if(p.type === \"rook\" && p.x === 7 && p.y === 7)\r\n            {\r\n              socket.emit('kingRookMove',JSON.stringify({ 'room': `${room}`, 'color': `${(isBlackState == true)?\"black\":\"white\"}`}));\r\n            }\r\n            else if(p.type === \"rook\" && p.x === 7 && p.y === 0)\r\n            {\r\n              socket.emit('queenRookMove',JSON.stringify({ 'room': `${room}`, 'color': `${(isBlackState == true)?\"black\":\"white\"}`}));\r\n            }\r\n            p.x = y;\r\n            p.y = x;\r\n            updatedPieces.push(p);\r\n          }\r\n          else {\r\n            updatedPieces.push(p);\r\n          }\r\n        });\r\n        setPieces(updatedPieces);\r\n        setDots([]);\r\n        socket.emit(\"newMoveToServer\", JSON.stringify({ pieces: updatedPieces, room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n        if (referee.inCheck(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n          if (referee.inCheckMate(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n            socket.emit(\"checkmate\", JSON.stringify({ room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n          }\r\n        }\r\n        else {\r\n          if (referee.isStaleMate(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n            socket.emit(\"stalemate\", JSON.stringify({ room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n          }\r\n        }\r\n        if(turn === \"white\")\r\n        setTurn(\"black\");\r\n        else\r\n        setTurn(\"white\")\r\n        setActivePiece(null);\r\n        setEnPassant(null);\r\n        setEnPassantAttackers(null);\r\n        setenPassantAttackCoordinates(null);\r\n        setCastleRooks(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  function captureMove(a) {\r\n    if(activePiece && activePiece.type === \"pawn\" && (a.j=== 0 || a.j=== 7))\r\n    {\r\n      handlePawnPromotion(activePiece,a.i,a.j,true);\r\n    }\r\n    else\r\n    {\r\n      const updatedPieces = [];\r\n      pieces.forEach((p) => {\r\n        if (p === activePiece) {\r\n          if(p.type === \"king\")\r\n          {\r\n            socket.emit('kingMove',JSON.stringify({ 'room': `${room}`, 'color': `${(isBlackState == true)?\"black\":\"white\"}`}));\r\n          }\r\n          else if(p.type === \"rook\" && p.x === 7 && p.y === 7)\r\n          {\r\n            socket.emit('kingRookMove',JSON.stringify({ 'room': `${room}`, 'color': `${(isBlackState == true)?\"black\":\"white\"}`}));\r\n          }\r\n          else if(p.type === \"rook\" && p.x === 7 && p.y === 0)\r\n          {\r\n            socket.emit('queenRookMove',JSON.stringify({ 'room': `${room}`, 'color': `${(isBlackState == true)?\"black\":\"white\"}`}));\r\n          }\r\n          if(enPassantAttackers)\r\n          {\r\n            enPassantAttackers.forEach((attacker)=>{\r\n              if(attacker.x === p.x && attacker.y === p.y && enPassantAttackCoordinates.y === a.j && enPassantAttackCoordinates.x === a.i)\r\n              {\r\n                p.x = enPassantAttackCoordinates.y -1;\r\n                p.y = enPassantAttackCoordinates.x;\r\n              }\r\n            })\r\n          }\r\n          else\r\n          {\r\n            p.x = a.j;\r\n            p.y = a.i;\r\n          }\r\n          updatedPieces.push(p);\r\n        }\r\n        else {\r\n          if (!(p.x === a.j && p.y === a.i)) {\r\n            updatedPieces.push(p);\r\n          }\r\n        }\r\n      });\r\n      setPieces(updatedPieces);\r\n      setDots([]);\r\n      socket.emit(\"newMoveToServer\", JSON.stringify({ pieces: updatedPieces, room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n      if (referee.inCheck(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n        if (referee.inCheckMate(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n          socket.emit(\"checkmate\", JSON.stringify({ room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n        }\r\n      }\r\n      else {\r\n        if (referee.isStaleMate(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n          socket.emit(\"stalemate\", JSON.stringify({ room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n        }\r\n      }\r\n      if(turn === \"white\")\r\n      setTurn(\"black\");\r\n      else\r\n      setTurn(\"white\")\r\n      setActivePiece(null);\r\n      setEnPassant(null);\r\n      setEnPassantAttackers(null);\r\n      setenPassantAttackCoordinates(null);\r\n      setCastleRooks(null);\r\n    }\r\n  }\r\n\r\n\r\n  function validMovesDisplay(x, y) {\r\n    const currentPiece = pieces.find(p => p.y === x && p.x === y);\r\n    const dotsArr = [];\r\n    for (let i = 0; i <= 7; ++i) {\r\n      for (let j = 0; j <= 7; j++) {\r\n        const a = referee.isValidMove(y, x, j, i, currentPiece.type, currentPiece.team, pieces, true);\r\n        if (a) {\r\n          const newBoardState = referee.getBoardStateAfterMove(currentPiece.x, currentPiece.y, i, j, pieces);\r\n          if (!referee.inCheck(newBoardState, currentPiece.team)) {\r\n            dotsArr.push({ i: i, j: j });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (enPassantAttackers) {\r\n      enPassantAttackers.forEach((p) => {\r\n        if (p.x === currentPiece.x && p.y === currentPiece.y) {\r\n          const newBoardState = referee.getBoardStateAfterMove(currentPiece.x, currentPiece.y,  enPassantAttackCoordinates.y, enPassantAttackCoordinates.x, pieces);\r\n          if (!referee.inCheck(newBoardState, currentPiece.team)) {\r\n            dotsArr.push({ i: enPassantAttackCoordinates.x, j: enPassantAttackCoordinates.y });\r\n          }\r\n        }\r\n      })\r\n    }\r\n    if(!referee.inCheck(pieces,\"our\"))\r\n    {\r\n      if(currentPiece.type === \"king\")\r\n      {\r\n        const req = JSON.stringify({room:room,color:(isBlackState == true?\"black\":\"white\")});\r\n        fetch(`http://${IP_ADDRESS}:8080/api/castling`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: req\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if(isBlackState == false)\r\n            {\r\n              console.log(data)\r\n              console.log('got here')\r\n                //white\r\n                //king side \r\n                const kingSideSquares = [{x:5,y:7},{x:6,y:7}];\r\n                const queenSideSquares = [{x:1,y:7},{x:2,y:7},{x:3,y:7}];\r\n                let occupiedKingSide = false;\r\n                let  occupiedQueenSide = false;\r\n                kingSideSquares.forEach((square)=>{\r\n                  if(referee.isTileOccupied(square.x,square.y,pieces))\r\n                  {\r\n                    occupiedKingSide = true;\r\n                  }\r\n                })\r\n                console.log(occupiedKingSide)\r\n                queenSideSquares.forEach((square)=>{\r\n                  if(referee.isTileOccupied(square.x,square.y,pieces))\r\n                  {\r\n                    occupiedQueenSide = true;\r\n                  }\r\n                })\r\n                const rooks = []\r\n                if(!occupiedKingSide && !areSquaresAttacked(kingSideSquares) && data[\"king\"] === false && data[\"kingRook\"] === false)\r\n                {\r\n                  console.log('we are eligible to castle king side for white');\r\n                  rooks.push(pieces.find(p => p.x === 7 && p.y === 7))\r\n                }\r\n                if(!occupiedQueenSide && !areSquaresAttacked(queenSideSquares) && data[\"king\"] === false && data[\"queenRook\"] === false)\r\n                {\r\n                  console.log('we are eligible to castle queen side for white');\r\n                  rooks.push(pieces.find(p => p.x === 7 && p.y === 0))\r\n                }\r\n                setCastleRooks(rooks);\r\n  \r\n            }\r\n            else\r\n            {\r\n     \r\n                const kingSideSquares = [{x:1,y:7},{x:2,y:7}];\r\n                const queenSideSquares = [{x:4,y:7},{x:5,y:7},{x:6,y:7}];\r\n                let occupiedKingSide = false;\r\n                let  occupiedQueenSide = false;\r\n                kingSideSquares.forEach((square)=>{\r\n                  if(referee.isTileOccupied(square.x,square.y,pieces))\r\n                  {\r\n                    occupiedKingSide = true;\r\n                  }\r\n                })\r\n                queenSideSquares.forEach((square)=>{\r\n                  if(referee.isTileOccupied(square.x,square.y,pieces))\r\n                  {\r\n                    occupiedQueenSide = true;\r\n                  }\r\n                })\r\n                const rooks = []\r\n                if(!occupiedKingSide && !areSquaresAttacked(kingSideSquares) && data[\"king\"] === false && data[\"queenRook\"] === false)\r\n                {\r\n                  console.log('we are eligible to castle king side for black');\r\n                  rooks.push(pieces.find(p => p.x === 7 && p.y === 0))\r\n\r\n\r\n                }\r\n                if(!occupiedQueenSide && !areSquaresAttacked(queenSideSquares) && data[\"king\"] === false && data[\"kingRook\"] === false)\r\n                {\r\n                  console.log('we are eligible to castle queen side for black');\r\n                  rooks.push(pieces.find(p => p.x === 7 && p.y === 7))\r\n                }\r\n                setCastleRooks(rooks);\r\n            }\r\n          })\r\n          .catch(error => console.error('Error:', error));\r\n      }\r\n      else\r\n      {\r\n        setCastleRooks(null);\r\n      }\r\n    }\r\n    setDots(dotsArr);\r\n    setActivePiece(currentPiece);\r\n  }\r\n\r\n  function areSquaresAttacked(squares)\r\n  {\r\n    let ret = false;\r\n    squares.forEach((square) => {\r\n      pieces.forEach((piece) => {\r\n        if (piece.team === \"opponent\") {\r\n          if (referee.isValidMove(piece.x, piece.y, square.y , square.x, piece.type, piece.team, pieces, false)) {\r\n            ret = true;\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return ret;\r\n  }\r\n\r\n  function grabPiece(e) {\r\n    if (!(gameState == \"completed\")) {\r\n      const chessboard = chessBoardRef.current;\r\n      const element = (e.target);\r\n      let x = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\r\n      let y = Math.floor((e.clientY - chessboard.offsetTop) / GRID_SIZE);\r\n      if (chessboard) {\r\n        if (!element.classList.contains(\"chess-piece\")) {\r\n          normalMove(x, y)\r\n        }\r\n        else {\r\n          if (gameState === \"not_started\") {\r\n            console.log(\"Please let the game begin to make moves\"); // we need to develop UI for this \r\n          }\r\n          else {\r\n            if ((turn === \"black\" && isBlackState === true) || (turn === \"white\" && isBlackState === false)) {\r\n              const a = dots.find((d) => d.i === x && d.j === y);\r\n              if (a) {\r\n                captureMove(a)\r\n              }\r\n              else {\r\n                if(castleRooks == null)\r\n                validMovesDisplay(x, y);\r\n                else\r\n                {\r\n                  let castleFlag = false;\r\n                  console.log(`x=${x}`);\r\n                  console.log(`y=${y}`);\r\n                  castleRooks.forEach((castleRook)=>{\r\n                    console.log(castleRook)\r\n                    if(castleRook.x === y && castleRook.y === x)\r\n                    {\r\n                      castleFlag = true;\r\n                      const updatedPieces=[];\r\n                      if(isBlackState === false)\r\n                      {\r\n                        let kingS = false;\r\n                        pieces.forEach((p)=>{\r\n                          if(p.x === y && p.y === x)\r\n                          {\r\n                            if(p.y === 7)\r\n                            {\r\n                              p.y = 5;\r\n                              kingS = true;\r\n                            }\r\n                            else if(p.y === 0)\r\n                            {\r\n                              p.y = 3;\r\n                            }\r\n                            updatedPieces.push(p);\r\n                          }\r\n                          else\r\n                          {\r\n                            if (!(p.x === 7 && p.y === 4)) {\r\n                              updatedPieces.push(p);\r\n                            }\r\n                            else\r\n                            {\r\n                              (kingS === true) ? p.y = 6 : p.y = 2;\r\n                              updatedPieces.push(p);\r\n                            }\r\n                          }\r\n                        })\r\n                      }\r\n                      else\r\n                      {\r\n                        let kingS = false;\r\n                        pieces.forEach((p)=>{\r\n                          if(p.x === y && p.y === x)\r\n                          {\r\n                            console.log(p.y)\r\n                            if(p.y === 7)\r\n                            {\r\n                              p.y = 4;\r\n                              \r\n                            }\r\n                            else if(p.y === 0)\r\n                            {\r\n                              p.y = 2;\r\n                              kingS = true;\r\n                            }\r\n                            updatedPieces.push(p);\r\n                          }\r\n                          else\r\n                          {\r\n                            if (!(p.x === 7 && p.y === 3)) {\r\n                              updatedPieces.push(p);\r\n                            }\r\n                            else\r\n                            {\r\n                              (kingS === true) ? p.y = 1 : p.y = 5;\r\n                              updatedPieces.push(p);\r\n                            }\r\n                          }\r\n                        })\r\n                      }\r\n                      setPieces(updatedPieces);\r\n                      setDots([]);\r\n                      socket.emit('kingMove',JSON.stringify({ 'room': `${room}`, 'color': `${(isBlackState == true)?\"black\":\"white\"}`}));\r\n                      socket.emit(\"newMoveToServer\", JSON.stringify({ pieces: updatedPieces, room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n                      if (referee.inCheck(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n                        if (referee.inCheckMate(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n                          socket.emit(\"checkmate\", JSON.stringify({ room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n                        }\r\n                      }\r\n                      else {\r\n                        if (referee.isStaleMate(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n                          socket.emit(\"stalemate\", JSON.stringify({ room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n                        }\r\n                      }\r\n                      if(turn === \"white\")\r\n                      setTurn(\"black\");\r\n                      else\r\n                      setTurn(\"white\");\r\n                      setActivePiece(null);\r\n                      setEnPassant(null);\r\n                      setEnPassantAttackers(null);\r\n                      setenPassantAttackCoordinates(null);\r\n                      setCastleRooks(null);\r\n                    }\r\n                  });\r\n                  if(!castleFlag)\r\n                  {\r\n                    validMovesDisplay(x,y);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n   function  promotePawn(type) {\r\n    if (promotionPawn) {\r\n      const updatedPieces = [];\r\n      pieces.forEach((piece) => {\r\n        if (promotionPawn === piece) {\r\n          piece.type = type;\r\n          piece.image = (!isBlackState) ? ((piece.team === \"our\") ? `/assets/images/W_${type}.png` : `/assets/images/B_${type}.png`) : ((piece.team === \"our\") ? `/assets/images/B_${type}.png` : `/assets/images/W_${type}.png`);\r\n          piece.x = pawnPromoteCoordinates.x;\r\n          piece.y = pawnPromoteCoordinates.y;\r\n          updatedPieces.push(piece);\r\n        }\r\n        else\r\n        {\r\n          if(!(piece.x === pawnPromoteCoordinates.x && piece.y === pawnPromoteCoordinates.y))\r\n          updatedPieces.push(piece);\r\n        }\r\n      });\r\n      setPieces(updatedPieces);\r\n      setDots([]);\r\n      socket.emit(\"newMoveToServer\", JSON.stringify({ pieces: updatedPieces, room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n      if (referee.inCheck(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n        if (referee.inCheckMate(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n          socket.emit(\"checkmate\", JSON.stringify({ room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n        }\r\n      }\r\n      else {\r\n        if (referee.isStaleMate(updatedPieces, activePiece.team === \"our\" ? \"opponent\" : \"our\") === true) {\r\n          socket.emit(\"stalemate\", JSON.stringify({ room: room, color: isBlackState ? \"black\" : \"white\" }));\r\n        }\r\n      }\r\n      if(turn === \"white\")\r\n      setTurn(\"black\");\r\n      else\r\n      setTurn(\"white\");\r\n      setActivePiece(null);\r\n      setPawnPromoteCoordinates(null);\r\n      setPromotionPawn(null);\r\n      setEnPassant(null);\r\n      setEnPassantAttackers(null);\r\n      setenPassantAttackCoordinates(null);\r\n      setCastleRooks(null);\r\n      pawnPromotionModalRef.current.classList.add('hidden');\r\n    }\r\n  }\r\n\r\n  function promotionTeamType() {\r\n    if (promotionPawn)\r\n      return (!isBlackState) ? (promotionPawn.team === \"our\" ? \"W\" : \"B\") : (promotionPawn.team === \"our\" ? \"B\" : \"W\");\r\n  }\r\n\r\n\r\n  let board = [];\r\n  for (let i = 0; i < verticalAxis.length; ++i) {\r\n    for (let j = 0; j < horizontalAxis.length; ++j) {\r\n      let image = undefined;\r\n      pieces.forEach(p => { if (p.x === i && p.y === j) image = p.image });\r\n      const dotsfound = dots.find((d) => d.i === j && d.j === i)\r\n      board.push(<Tile isDotted={dotsfound ? true : false} num={i * i + j} image={image} />);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"pawn-promotion-modal\" className='hidden' ref={pawnPromotionModalRef}>\r\n        <div className='modal-body' >\r\n          <img onClick={ () => promotePawn(\"rook\")} src={`/assets/images/${promotionTeamType()}_rook.png`} />\r\n          <img onClick={ () => promotePawn(\"queen\")} src={`/assets/images/${promotionTeamType()}_queen.png`} />\r\n          <img onClick={ () => promotePawn(\"knight\")} src={`/assets/images/${promotionTeamType()}_knight.png`} />\r\n          <img onClick={ () => promotePawn(\"bishop\")} src={`/assets/images/${promotionTeamType()}_bishop.png`} />\r\n        </div>\r\n      </div>\r\n      <div /*onMouseMove={e =>  movePiece(e)}*/ onPointerDown={e => grabPiece(e)} /*onMouseUp={e => dropPiece(e)}*/ id=\"gameboard\" ref={chessBoardRef}>\r\n        {board}\r\n      </div>\r\n      <div> <b>Number of Clients  = {numClients}</b></div>\r\n      <div>\r\n        <button ref={gameStartButtonRef} onClick={startGameHandler}>Start Game</button>\r\n      </div>\r\n      <div className='turnDis' >\r\n        {turn}'s  Turn\r\n      </div>\r\n      <div>\r\n        <b> Result = {gameResult}</b>\r\n      </div>\r\n      <div>\r\n        <b> {gameOverDis}</b>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"+JAAA,MAAOA,MAAK,EAAIC,MAAM,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,iBAAiB,CACxB,MAAOC,KAAI,KAAM,QAAQ,CACzB,MAAOC,QAAO,KAAM,WAAW,CAC/B,OAASC,SAAS,CAAEC,cAAc,CAAEC,YAAY,KAAQ,cAAc,CACtE,MAAOC,GAAE,KAAM,kBAAkB,CACjC,MAAOC,WAAU,KAAM,WAAW,CAAC,6IAEnC,MAAO,IAAIC,MAAK,CAAG,CACjBC,KAAK,CAAEC,MAAM,CACbC,CAAC,CAAEC,MAAM,CACTC,CAAC,CAAED,MAAM,CACTE,IAAI,CAAEJ,MAAM,CACZK,IAAI,CAAEL,MAAM,CACZM,SAAS,CAAEC,OACb,CAAC,CAED;AACA,GAAMC,uBAAsB,CAAG,EAAE,CAEjC,GAAMC,uBAAsB,CAAG,EAAE,CAIjC,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CAC1B,GAAMC,SAAQ,CAAID,CAAC,GAAK,CAAC,CAAI,UAAU,CAAG,KAAK,CAC/C,GAAME,MAAK,CAAMF,CAAC,GAAK,CAAC,CAAI,GAAG,CAAG,GAAI,CACtC,GAAMG,YAAW,CAAIH,CAAC,GAAK,CAAC,CAAI,CAAC,CAAG,CAAC,CACrC,GAAMI,iBAAgB,CAAIJ,CAAC,GAAK,CAAC,CAAI,CAAC,CAAG,CAAC,CAC1C;AACA,IAAK,GAAIK,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,CAAC,CAAE,EAAEA,CAAC,CAAE,CAC1BP,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,aAAW,CAAEX,CAAC,CAAEY,WAAW,CAAEV,CAAC,CAAEY,CAAC,CAAEX,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CAC/H,CACA;AACAH,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,aAAW,CAAEX,CAAC,CAAEa,gBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CAClIH,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,aAAW,CAAEX,CAAC,CAAEa,gBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CAClI;AACAH,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,eAAa,CAAEX,CAAC,CAAEa,gBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CACtIH,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,eAAa,CAAEX,CAAC,CAAEa,gBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CACtI;AACAH,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,eAAa,CAAEX,CAAC,CAAEa,gBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CACtIH,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,eAAa,CAAEX,CAAC,CAAEa,gBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CACtI;AACAH,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,aAAW,CAAEX,CAAC,CAAEa,gBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CAClI;AACAH,sBAAsB,CAACQ,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,KAAK,cAAY,CAAEX,CAAC,CAAEa,gBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAEM,QAAS,CAAC,CAAC,CACtI,CAEA,IAAK,GAAID,GAAC,CAAG,CAAC,CAAEA,EAAC,CAAG,CAAC,CAAEA,EAAC,EAAE,CAAE,CAC1B,GAAMC,UAAQ,CAAID,EAAC,GAAK,CAAC,CAAI,UAAU,CAAG,KAAK,CAC/C,GAAME,OAAK,CAAMF,EAAC,GAAK,CAAC,CAAI,GAAG,CAAG,GAAI,CACtC,GAAMG,aAAW,CAAIH,EAAC,GAAK,CAAC,CAAI,CAAC,CAAG,CAAC,CACrC,GAAMI,kBAAgB,CAAIJ,EAAC,GAAK,CAAC,CAAI,CAAC,CAAG,CAAC,CAC1C;AACA,IAAK,GAAIK,GAAC,CAAG,CAAC,CAAEA,EAAC,CAAG,CAAC,CAAE,EAAEA,EAAC,CAAE,CAC1BN,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,aAAW,CAAEX,CAAC,CAAEY,YAAW,CAAEV,CAAC,CAAEY,EAAC,CAAEX,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CAC/H,CACA;AACAF,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,aAAW,CAAEX,CAAC,CAAEa,iBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CAClIF,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,aAAW,CAAEX,CAAC,CAAEa,iBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CAClI;AACAF,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,eAAa,CAAEX,CAAC,CAAEa,iBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CACtIF,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,eAAa,CAAEX,CAAC,CAAEa,iBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CACtI;AACAF,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,eAAa,CAAEX,CAAC,CAAEa,iBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CACtIF,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,eAAa,CAAEX,CAAC,CAAEa,iBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CACtI;AACAF,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,aAAW,CAAEX,CAAC,CAAEa,iBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CAClI;AACAF,sBAAsB,CAACO,IAAI,CAAC,CAAEjB,KAAK,yBAAmBa,MAAK,cAAY,CAAEX,CAAC,CAAEa,iBAAgB,CAAEX,CAAC,CAAE,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAEM,SAAS,CAAC,CAAC,CACtI,CAEA;AACA,GAAMM,WAAU,gBAAWpB,UAAU,UAAQ,CAE7C;AACA,GAAMqB,OAAM,CAAGtB,EAAE,CAACqB,UAAU,CAAC,CAG7B,cAAe,SAASE,UAAS,MAAoB,IAAjBC,KAAI,MAAJA,IAAI,CAAEC,OAAO,MAAPA,OAAO,CAC/C;AACA;AACA,cAAkChC,QAAQ,CAAC,aAAa,CAAC,wCAAlDiC,SAAS,eAAEC,YAAY,eAE9B;AACA,eAAoClC,QAAQ,CAAC,CAAC,CAAC,yCAAxCmC,UAAU,eAAEC,aAAa,eAEhC,eAAqCpC,QAAQ,CAAC,IAAI,CAAC,yCAA5CqC,WAAW,eAACC,cAAc,eAEjC,eAAoDtC,QAAQ,CAAC,IAAI,CAAC,yCAA3DuC,kBAAkB,eAAEC,qBAAqB,eAEhD,eAAmCxC,QAAQ,CAAC,IAAI,CAAC,0CAA1CyC,UAAU,gBAACC,aAAa,gBAE/B;AACA,gBAAwC1C,QAAQ,CAAC,KAAK,CAAC,2CAAhD2C,YAAY,gBAAEC,eAAe,gBAGpC,gBAAsC5C,QAAQ,CAAC,IAAI,CAAC,2CAA7C6C,WAAW,gBAAEC,cAAc,gBAClC;AACA;AACA;AACA,gBAA4B9C,QAAQ,CAACmB,sBAAsB,CAAC,2CAArD4B,MAAM,gBAAEC,SAAS,gBACxB,GAAMC,cAAa,CAAGlD,MAAM,CAAC,IAAI,CAAC,CAClC,GAAMmD,sBAAqB,CAAGnD,MAAM,CAAC,IAAI,CAAC,CAC1C,GAAMoD,QAAO,CAAG,GAAIhD,QAAO,EAAE,CAC7B,gBAA0CH,QAAQ,CAAC,IAAI,CAAC,2CAAjDoD,aAAa,gBAAEC,gBAAgB,gBACtC,GAAMC,mBAAkB,CAAGvD,MAAM,CAAC,IAAI,CAAC,CACvC,gBAAwBC,QAAQ,CAAC,IAAI,CAAC,2CAA/BuD,IAAI,gBAAEC,OAAO,gBACpB,gBAAwBxD,QAAQ,CAAC,EAAE,CAAC,2CAA7ByD,IAAI,gBAAEC,OAAO,gBACpB,gBAAmE1D,QAAQ,CAAC,IAAI,CAAC,2CAA1E2D,0BAA0B,gBAACC,6BAA6B,gBAC/D,gBAAqC5D,QAAQ,CAAC,IAAI,CAAC,2CAA5C6D,WAAW,gBAACC,cAAc,gBAGjC;AACA7D,SAAS,CAAC,UAAM,CACd,GAAIsB,MAAK,CAAG,OAAO,CACnB,GAAIwC,cAAc,CAACC,OAAO,CAACjC,IAAI,CAAC,EAAI,IAAI,CAAE,CACxCR,KAAK,CAAGwC,cAAc,CAACC,OAAO,CAACjC,IAAI,CAAC,CACpCR,KAAK,GAAK,OAAO,CAAGqB,eAAe,CAAC,KAAK,CAAC,CAAGA,eAAe,CAAC,IAAI,CAAC,CACpE,CACAf,MAAM,CAACoC,IAAI,CAAC,eAAe,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,WAAKpC,IAAI,CAAE,CAAE,OAAO,WAAKR,KAAK,CAAG,CAAC,CAAC,CAAC,CACxF,MAAO,WAAM,CACXM,MAAM,CAACoC,IAAI,CAAC,gBAAgB,CAAElC,IAAI,CAAC,CACrC,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN9B,SAAS,CAAC,UAAM,CACdmE,WAAW,CAAC,UAAM,CAChBC,KAAK,kBAAW7D,UAAU,0BAAyB,CACjD8D,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEzC,IACR,CAAC,CAAC,CACC0C,IAAI,CAAC,SAAAC,QAAQ,QAAIA,SAAQ,CAACC,IAAI,EAAE,GAAC,CACjCF,IAAI,CAAC,SAAAG,IAAI,CAAI,CACZxC,aAAa,CAACwC,IAAI,CAAC,aAAa,CAAC,CAAC,CACpC,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,GAAC,CACnD,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN7E,SAAS,CAAC,UAAM,CACd,GAAIqD,kBAAkB,CAAE,CACtB,GAAInB,UAAU,EAAI,CAAC,EAAIF,SAAS,EAAI,aAAa,CAAE,CACjD,GAAI,CAACqB,kBAAkB,CAAC0B,OAAO,CAACC,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,CAC/D5B,kBAAkB,CAAC0B,OAAO,CAACC,SAAS,CAACE,GAAG,CAAC,aAAa,CAAC,CAC3D,CAAC,IACI,CACH,GAAI7B,kBAAkB,CAAC0B,OAAO,CAACC,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,CAC9D5B,kBAAkB,CAAC0B,OAAO,CAACC,SAAS,CAACG,MAAM,CAAC,aAAa,CAAC,CAC9D,CACF,CACF,CAAC,CAAE,CAACjD,UAAU,CAAEF,SAAS,CAAC,CAAC,CAE3BhC,SAAS,CAAC,UAAM,CACd,GAAIgC,SAAS,EAAI,WAAW,CAAE,CAC5BK,cAAc,CAAC,4CAA4C,CAAC,CAC9D,CACF,CAAC,CAAE,CAACL,SAAS,CAAC,CAAC,CAEfJ,MAAM,CAACwD,EAAE,CAAC,WAAW,CAAE,SAACT,IAAI,CAAK,CAC/B,GAAMU,SAAQ,CAAGpB,IAAI,CAACqB,KAAK,CAACX,IAAI,CAAC,CACjC5B,SAAS,CAACsC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAC7BpD,YAAY,CAACoD,QAAQ,CAAC,YAAY,CAAC,CAAC,CACpC,GAAGA,QAAQ,CAAC,MAAM,CAAC,EAAI,IAAI,CAC3B9B,OAAO,CAAC8B,QAAQ,CAAC,MAAM,CAAC,CAAC,CAC3B,CAAC,CAAC,CAEFzD,MAAM,CAACwD,EAAE,CAAC,6BAA6B,CAAE,SAACT,IAAI,CAAK,CACjD,GAAMU,SAAQ,CAAGpB,IAAI,CAACqB,KAAK,CAACX,IAAI,CAAC,CACjC5B,SAAS,CAACsC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAC7B,GAAG/B,IAAI,GAAK,OAAO,CACnBC,OAAO,CAAC,OAAO,CAAC,CAAC,IAEjBA,QAAO,CAAC,OAAO,CAAC,CAClB,CAAC,CAAC,CAEF3B,MAAM,CAACwD,EAAE,CAAC,cAAc,CAAE,SAACT,IAAI,CAAK,CAClC,GAAMU,SAAQ,CAAGpB,IAAI,CAACqB,KAAK,CAACX,IAAI,CAAC,CACjC,GAAMY,IAAG,CAAGF,QAAQ,CAAC,QAAQ,CAAC,CAC9B,GAAMG,OAAM,CAAID,GAAG,GAAK,OAAO,CAAI,WAAW,CAAKA,GAAG,GAAK,OAAO,CAAI,WAAW,CAAG,WAAY,CAChG9C,aAAa,CAAC+C,MAAM,CAAC,CACrBvD,YAAY,CAAC,WAAW,CAAC,CACzB;AACF,CAAC,CAAC,CAEFL,MAAM,CAACwD,EAAE,CAAC,UAAU,CAAE,SAACT,IAAI,CAAK,CAC7BA,IAAI,GAAK,OAAO,CAAIhC,eAAe,CAAC,KAAK,CAAC,CAAGA,eAAe,CAAC,IAAI,CAAC,CAClEgC,IAAI,GAAK,OAAO,CAAI5B,SAAS,CAAC7B,sBAAsB,CAAC,CAAG6B,SAAS,CAAC5B,sBAAsB,CAAC,CAC1Fc,YAAY,CAAC,SAAS,CAAC,CACvBsB,OAAO,CAAC,OAAO,CAAC,CAChBO,cAAc,CAAC2B,OAAO,CAAC3D,IAAI,CAAE6C,IAAI,CAAC,CACpC,CAAC,CAAC,CAEF,QAASe,iBAAgB,EAAG,CAC1B9D,MAAM,CAACoC,IAAI,CAAC,gBAAgB,CAAElC,IAAI,CAAC,CACrC,CAEAF,MAAM,CAACwD,EAAE,CAAC,WAAW,CAAE,SAACT,IAAI,CAAK,CAC/B,GAAMU,SAAQ,CAAGpB,IAAI,CAACqB,KAAK,CAACX,IAAI,CAAC,CACjC,GAAMhE,EAAC,CAAG0E,QAAQ,CAAC,GAAG,CAAC,CACvB,GAAMxE,EAAC,CAAGwE,QAAQ,CAAC,GAAG,CAAC,CACvB,GAAMM,UAAS,CAAG7C,MAAM,CAAC8C,MAAM,CAAC,SAAAxE,CAAC,QAAIA,EAAC,CAACT,CAAC,GAAKE,CAAC,EAAMO,CAAC,CAACN,IAAI,GAAK,MAAO,EAAKM,CAAC,CAACL,IAAI,GAAK,KAAM,EAAI8E,IAAI,CAACC,GAAG,CAAC1E,CAAC,CAACP,CAAC,CAACF,CAAC,CAAC,GAAK,CAAC,GAAC,CACtH4B,qBAAqB,CAACoD,SAAS,CAAC,CAChCI,YAAY,CAAC,IAAI,CAAC,CAClBpC,6BAA6B,CAAC,CAAChD,CAAC,CAACA,CAAC,CAACE,CAAC,CAACA,CAAC,CAAC,CAAC,CAC1C,CAAC,CAAC,CAEF,gBAA2Dd,QAAQ,CAAC,IAAI,CAAC,2CAAlEiG,sBAAsB,gBAACC,yBAAyB,gBACvD,gBAAiClG,QAAQ,CAAC,IAAI,CAAC,2CAAxCiB,SAAS,gBAAC+E,YAAY,gBAE7B,QAASG,oBAAmB,CAACtD,WAAW,CAACjC,CAAC,CAACE,CAAC,CAACsF,WAAW,CACxD,CACE/C,gBAAgB,CAACR,WAAW,CAAC,CAC7BqD,yBAAyB,CAAC,CAACtF,CAAC,CAACE,CAAC,CAACA,CAAC,CAACF,CAAC,CAAC,CAAC,CACpCsC,qBAAqB,CAAC8B,OAAO,CAACC,SAAS,CAACG,MAAM,CAAC,QAAQ,CAAC,CAC1D,CAEA,QAASiB,WAAU,CAACzF,CAAC,CAAEE,CAAC,CAAE,CACxB,GAAMwF,EAAC,CAAG7C,IAAI,CAAC8C,IAAI,CAAC,SAACC,CAAC,QAAKA,EAAC,CAAC9E,CAAC,GAAKd,CAAC,EAAI4F,CAAC,CAACC,CAAC,GAAK3F,CAAC,GAAC,CAClD,GAAIwF,CAAC,CAAE,CACL,GAAGzD,WAAW,EAAIA,WAAW,CAAC9B,IAAI,GAAK,MAAM,GAAKD,CAAC,GAAI,CAAC,EAAIA,CAAC,GAAI,CAAC,CAAC,CACnE,CACEqF,mBAAmB,CAACtD,WAAW,CAACjC,CAAC,CAACE,CAAC,CAAC,KAAK,CAAC,CAC5C,CAAC,IAED,CACE,GAAG+B,WAAW,CAAC9B,IAAI,GAAK,MAAM,EAAI+E,IAAI,CAACC,GAAG,CAAClD,WAAW,CAACjC,CAAC,CAACE,CAAC,CAAC,GAAK,CAAC,CACjE,CACEe,MAAM,CAACoC,IAAI,CAAC,sBAAsB,CAACC,IAAI,CAACC,SAAS,CAAC,CAACpC,IAAI,CAACA,IAAI,CAACnB,CAAC,CAACA,CAAC,CAACE,CAAC,CAACA,CAAC,CAAC,CAAC,CAAC,CACzE,CACA,GAAM4F,cAAa,CAAG,EAAE,CACxB3D,MAAM,CAAC4D,OAAO,CAAC,SAACtF,CAAC,CAAK,CACpB,GAAIA,CAAC,GAAKwB,WAAW,CAAE,CACrB,GAAGxB,CAAC,CAACN,IAAI,GAAK,MAAM,CACpB,CACEc,MAAM,CAACoC,IAAI,CAAC,UAAU,CAACC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,WAAKpC,IAAI,CAAE,CAAE,OAAO,WAAMY,YAAY,EAAI,IAAI,CAAE,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CACpH,CAAC,IACI,IAAGtB,CAAC,CAACN,IAAI,GAAK,MAAM,EAAIM,CAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,CACnD,CACEe,MAAM,CAACoC,IAAI,CAAC,cAAc,CAACC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,WAAKpC,IAAI,CAAE,CAAE,OAAO,WAAMY,YAAY,EAAI,IAAI,CAAE,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CACxH,CAAC,IACI,IAAGtB,CAAC,CAACN,IAAI,GAAK,MAAM,EAAIM,CAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,CACnD,CACEe,MAAM,CAACoC,IAAI,CAAC,eAAe,CAACC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,WAAKpC,IAAI,CAAE,CAAE,OAAO,WAAMY,YAAY,EAAI,IAAI,CAAE,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CACzH,CACAtB,CAAC,CAACT,CAAC,CAAGE,CAAC,CACPO,CAAC,CAACP,CAAC,CAAGF,CAAC,CACP8F,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CAAC,IACI,CACHqF,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CACF,CAAC,CAAC,CACF2B,SAAS,CAAC0D,aAAa,CAAC,CACxBhD,OAAO,CAAC,EAAE,CAAC,CACX7B,MAAM,CAACoC,IAAI,CAAC,iBAAiB,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpB,MAAM,CAAE2D,aAAa,CAAE3E,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CAC9H,GAAIQ,OAAO,CAACyD,OAAO,CAACF,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAC5F,GAAImC,OAAO,CAAC0D,WAAW,CAACH,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAChGa,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpC,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CACnG,CACF,CAAC,IACI,CACH,GAAIQ,OAAO,CAAC2D,WAAW,CAACJ,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAChGa,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpC,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CACnG,CACF,CACA,GAAGY,IAAI,GAAK,OAAO,CACnBC,OAAO,CAAC,OAAO,CAAC,CAAC,IAEjBA,QAAO,CAAC,OAAO,CAAC,CAChBV,cAAc,CAAC,IAAI,CAAC,CACpBkD,YAAY,CAAC,IAAI,CAAC,CAClBxD,qBAAqB,CAAC,IAAI,CAAC,CAC3BoB,6BAA6B,CAAC,IAAI,CAAC,CACnCE,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CACF,CAEA,QAASiD,YAAW,CAACT,CAAC,CAAE,CACtB,GAAGzD,WAAW,EAAIA,WAAW,CAAC9B,IAAI,GAAK,MAAM,GAAKuF,CAAC,CAACG,CAAC,GAAI,CAAC,EAAIH,CAAC,CAACG,CAAC,GAAI,CAAC,CAAC,CACvE,CACEN,mBAAmB,CAACtD,WAAW,CAACyD,CAAC,CAAC5E,CAAC,CAAC4E,CAAC,CAACG,CAAC,CAAC,IAAI,CAAC,CAC/C,CAAC,IAED,CACE,GAAMC,cAAa,CAAG,EAAE,CACxB3D,MAAM,CAAC4D,OAAO,CAAC,SAACtF,CAAC,CAAK,CACpB,GAAIA,CAAC,GAAKwB,WAAW,CAAE,CACrB,GAAGxB,CAAC,CAACN,IAAI,GAAK,MAAM,CACpB,CACEc,MAAM,CAACoC,IAAI,CAAC,UAAU,CAACC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,WAAKpC,IAAI,CAAE,CAAE,OAAO,WAAMY,YAAY,EAAI,IAAI,CAAE,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CACpH,CAAC,IACI,IAAGtB,CAAC,CAACN,IAAI,GAAK,MAAM,EAAIM,CAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,CACnD,CACEe,MAAM,CAACoC,IAAI,CAAC,cAAc,CAACC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,WAAKpC,IAAI,CAAE,CAAE,OAAO,WAAMY,YAAY,EAAI,IAAI,CAAE,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CACxH,CAAC,IACI,IAAGtB,CAAC,CAACN,IAAI,GAAK,MAAM,EAAIM,CAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,CACnD,CACEe,MAAM,CAACoC,IAAI,CAAC,eAAe,CAACC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,WAAKpC,IAAI,CAAE,CAAE,OAAO,WAAMY,YAAY,EAAI,IAAI,CAAE,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CACzH,CACA,GAAGJ,kBAAkB,CACrB,CACEA,kBAAkB,CAACoE,OAAO,CAAC,SAACK,QAAQ,CAAG,CACrC,GAAGA,QAAQ,CAACpG,CAAC,GAAKS,CAAC,CAACT,CAAC,EAAIoG,QAAQ,CAAClG,CAAC,GAAKO,CAAC,CAACP,CAAC,EAAI6C,0BAA0B,CAAC7C,CAAC,GAAKwF,CAAC,CAACG,CAAC,EAAI9C,0BAA0B,CAAC/C,CAAC,GAAK0F,CAAC,CAAC5E,CAAC,CAC3H,CACEL,CAAC,CAACT,CAAC,CAAG+C,0BAA0B,CAAC7C,CAAC,CAAE,CAAC,CACrCO,CAAC,CAACP,CAAC,CAAG6C,0BAA0B,CAAC/C,CAAC,CACpC,CACF,CAAC,CAAC,CACJ,CAAC,IAED,CACES,CAAC,CAACT,CAAC,CAAG0F,CAAC,CAACG,CAAC,CACTpF,CAAC,CAACP,CAAC,CAAGwF,CAAC,CAAC5E,CAAC,CACX,CACAgF,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CAAC,IACI,CACH,GAAI,EAAEA,CAAC,CAACT,CAAC,GAAK0F,CAAC,CAACG,CAAC,EAAIpF,CAAC,CAACP,CAAC,GAAKwF,CAAC,CAAC5E,CAAC,CAAC,CAAE,CACjCgF,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CACF,CACF,CAAC,CAAC,CACF2B,SAAS,CAAC0D,aAAa,CAAC,CACxBhD,OAAO,CAAC,EAAE,CAAC,CACX7B,MAAM,CAACoC,IAAI,CAAC,iBAAiB,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpB,MAAM,CAAE2D,aAAa,CAAE3E,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CAC9H,GAAIQ,OAAO,CAACyD,OAAO,CAACF,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAC5F,GAAImC,OAAO,CAAC0D,WAAW,CAACH,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAChGa,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpC,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CACnG,CACF,CAAC,IACI,CACH,GAAIQ,OAAO,CAAC2D,WAAW,CAACJ,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAChGa,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpC,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CACnG,CACF,CACA,GAAGY,IAAI,GAAK,OAAO,CACnBC,OAAO,CAAC,OAAO,CAAC,CAAC,IAEjBA,QAAO,CAAC,OAAO,CAAC,CAChBV,cAAc,CAAC,IAAI,CAAC,CACpBkD,YAAY,CAAC,IAAI,CAAC,CAClBxD,qBAAqB,CAAC,IAAI,CAAC,CAC3BoB,6BAA6B,CAAC,IAAI,CAAC,CACnCE,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CAGA,QAASmD,kBAAiB,CAACrG,CAAC,CAAEE,CAAC,CAAE,CAC/B,GAAMoG,aAAY,CAAGnE,MAAM,CAACwD,IAAI,CAAC,SAAAlF,CAAC,QAAIA,EAAC,CAACP,CAAC,GAAKF,CAAC,EAAIS,CAAC,CAACT,CAAC,GAAKE,CAAC,GAAC,CAC7D,GAAMqG,QAAO,CAAG,EAAE,CAClB,IAAK,GAAIzF,IAAC,CAAG,CAAC,CAAEA,GAAC,EAAI,CAAC,CAAE,EAAEA,GAAC,CAAE,CAC3B,IAAK,GAAI+E,EAAC,CAAG,CAAC,CAAEA,CAAC,EAAI,CAAC,CAAEA,CAAC,EAAE,CAAE,CAC3B,GAAMH,EAAC,CAAGnD,OAAO,CAACiE,WAAW,CAACtG,CAAC,CAAEF,CAAC,CAAE6F,CAAC,CAAE/E,GAAC,CAAEwF,YAAY,CAACnG,IAAI,CAAEmG,YAAY,CAAClG,IAAI,CAAE+B,MAAM,CAAE,IAAI,CAAC,CAC7F,GAAIuD,CAAC,CAAE,CACL,GAAMe,cAAa,CAAGlE,OAAO,CAACmE,sBAAsB,CAACJ,YAAY,CAACtG,CAAC,CAAEsG,YAAY,CAACpG,CAAC,CAAEY,GAAC,CAAE+E,CAAC,CAAE1D,MAAM,CAAC,CAClG,GAAI,CAACI,OAAO,CAACyD,OAAO,CAACS,aAAa,CAAEH,YAAY,CAAClG,IAAI,CAAC,CAAE,CACtDmG,OAAO,CAACxF,IAAI,CAAC,CAAED,CAAC,CAAEA,GAAC,CAAE+E,CAAC,CAAEA,CAAE,CAAC,CAAC,CAC9B,CACF,CACF,CACF,CACA,GAAIlE,kBAAkB,CAAE,CACtBA,kBAAkB,CAACoE,OAAO,CAAC,SAACtF,CAAC,CAAK,CAChC,GAAIA,CAAC,CAACT,CAAC,GAAKsG,YAAY,CAACtG,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAKoG,YAAY,CAACpG,CAAC,CAAE,CACpD,GAAMuG,eAAa,CAAGlE,OAAO,CAACmE,sBAAsB,CAACJ,YAAY,CAACtG,CAAC,CAAEsG,YAAY,CAACpG,CAAC,CAAG6C,0BAA0B,CAAC7C,CAAC,CAAE6C,0BAA0B,CAAC/C,CAAC,CAAEmC,MAAM,CAAC,CACzJ,GAAI,CAACI,OAAO,CAACyD,OAAO,CAACS,cAAa,CAAEH,YAAY,CAAClG,IAAI,CAAC,CAAE,CACtDmG,OAAO,CAACxF,IAAI,CAAC,CAAED,CAAC,CAAEiC,0BAA0B,CAAC/C,CAAC,CAAE6F,CAAC,CAAE9C,0BAA0B,CAAC7C,CAAE,CAAC,CAAC,CACpF,CACF,CACF,CAAC,CAAC,CACJ,CACA,GAAG,CAACqC,OAAO,CAACyD,OAAO,CAAC7D,MAAM,CAAC,KAAK,CAAC,CACjC,CACE,GAAGmE,YAAY,CAACnG,IAAI,GAAK,MAAM,CAC/B,CACE,GAAMwG,IAAG,CAAGrD,IAAI,CAACC,SAAS,CAAC,CAACpC,IAAI,CAACA,IAAI,CAACR,KAAK,CAAEoB,YAAY,EAAI,IAAI,CAAC,OAAO,CAAC,OAAQ,CAAC,CAAC,CACpF0B,KAAK,kBAAW7D,UAAU,uBAAsB,CAC9C8D,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAE+C,GACR,CAAC,CAAC,CACC9C,IAAI,CAAC,SAAAC,QAAQ,QAAIA,SAAQ,CAACC,IAAI,EAAE,GAAC,CACjCF,IAAI,CAAC,SAAAG,IAAI,CAAI,CACZ,GAAGjC,YAAY,EAAI,KAAK,CACxB,CACEoC,OAAO,CAACyC,GAAG,CAAC5C,IAAI,CAAC,CACjBG,OAAO,CAACyC,GAAG,CAAC,UAAU,CAAC,CACrB;AACA;AACA,GAAMC,gBAAe,CAAG,CAAC,CAAC7G,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7C,GAAM4G,iBAAgB,CAAG,CAAC,CAAC9G,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CACxD,GAAI6G,iBAAgB,CAAG,KAAK,CAC5B,GAAKC,kBAAiB,CAAG,KAAK,CAC9BH,eAAe,CAACd,OAAO,CAAC,SAACkB,MAAM,CAAG,CAChC,GAAG1E,OAAO,CAAC2E,cAAc,CAACD,MAAM,CAACjH,CAAC,CAACiH,MAAM,CAAC/G,CAAC,CAACiC,MAAM,CAAC,CACnD,CACE4E,gBAAgB,CAAG,IAAI,CACzB,CACF,CAAC,CAAC,CACF5C,OAAO,CAACyC,GAAG,CAACG,gBAAgB,CAAC,CAC7BD,gBAAgB,CAACf,OAAO,CAAC,SAACkB,MAAM,CAAG,CACjC,GAAG1E,OAAO,CAAC2E,cAAc,CAACD,MAAM,CAACjH,CAAC,CAACiH,MAAM,CAAC/G,CAAC,CAACiC,MAAM,CAAC,CACnD,CACE6E,iBAAiB,CAAG,IAAI,CAC1B,CACF,CAAC,CAAC,CACF,GAAMG,MAAK,CAAG,EAAE,CAChB,GAAG,CAACJ,gBAAgB,EAAI,CAACK,kBAAkB,CAACP,eAAe,CAAC,EAAI7C,IAAI,CAAC,MAAM,CAAC,GAAK,KAAK,EAAIA,IAAI,CAAC,UAAU,CAAC,GAAK,KAAK,CACpH,CACEG,OAAO,CAACyC,GAAG,CAAC,+CAA+C,CAAC,CAC5DO,KAAK,CAACpG,IAAI,CAACoB,MAAM,CAACwD,IAAI,CAAC,SAAAlF,CAAC,QAAIA,EAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,GAAC,CAAC,CACtD,CACA,GAAG,CAAC8G,iBAAiB,EAAI,CAACI,kBAAkB,CAACN,gBAAgB,CAAC,EAAI9C,IAAI,CAAC,MAAM,CAAC,GAAK,KAAK,EAAIA,IAAI,CAAC,WAAW,CAAC,GAAK,KAAK,CACvH,CACEG,OAAO,CAACyC,GAAG,CAAC,gDAAgD,CAAC,CAC7DO,KAAK,CAACpG,IAAI,CAACoB,MAAM,CAACwD,IAAI,CAAC,SAAAlF,CAAC,QAAIA,EAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,GAAC,CAAC,CACtD,CACAgD,cAAc,CAACiE,KAAK,CAAC,CAEzB,CAAC,IAED,CAEI,GAAMN,iBAAe,CAAG,CAAC,CAAC7G,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7C,GAAM4G,kBAAgB,CAAG,CAAC,CAAC9G,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CACxD,GAAI6G,kBAAgB,CAAG,KAAK,CAC5B,GAAKC,mBAAiB,CAAG,KAAK,CAC9BH,gBAAe,CAACd,OAAO,CAAC,SAACkB,MAAM,CAAG,CAChC,GAAG1E,OAAO,CAAC2E,cAAc,CAACD,MAAM,CAACjH,CAAC,CAACiH,MAAM,CAAC/G,CAAC,CAACiC,MAAM,CAAC,CACnD,CACE4E,iBAAgB,CAAG,IAAI,CACzB,CACF,CAAC,CAAC,CACFD,iBAAgB,CAACf,OAAO,CAAC,SAACkB,MAAM,CAAG,CACjC,GAAG1E,OAAO,CAAC2E,cAAc,CAACD,MAAM,CAACjH,CAAC,CAACiH,MAAM,CAAC/G,CAAC,CAACiC,MAAM,CAAC,CACnD,CACE6E,kBAAiB,CAAG,IAAI,CAC1B,CACF,CAAC,CAAC,CACF,GAAMG,OAAK,CAAG,EAAE,CAChB,GAAG,CAACJ,iBAAgB,EAAI,CAACK,kBAAkB,CAACP,gBAAe,CAAC,EAAI7C,IAAI,CAAC,MAAM,CAAC,GAAK,KAAK,EAAIA,IAAI,CAAC,WAAW,CAAC,GAAK,KAAK,CACrH,CACEG,OAAO,CAACyC,GAAG,CAAC,+CAA+C,CAAC,CAC5DO,MAAK,CAACpG,IAAI,CAACoB,MAAM,CAACwD,IAAI,CAAC,SAAAlF,CAAC,QAAIA,EAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,GAAC,CAAC,CAGtD,CACA,GAAG,CAAC8G,kBAAiB,EAAI,CAACI,kBAAkB,CAACN,iBAAgB,CAAC,EAAI9C,IAAI,CAAC,MAAM,CAAC,GAAK,KAAK,EAAIA,IAAI,CAAC,UAAU,CAAC,GAAK,KAAK,CACtH,CACEG,OAAO,CAACyC,GAAG,CAAC,gDAAgD,CAAC,CAC7DO,MAAK,CAACpG,IAAI,CAACoB,MAAM,CAACwD,IAAI,CAAC,SAAAlF,CAAC,QAAIA,EAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,GAAC,CAAC,CACtD,CACAgD,cAAc,CAACiE,MAAK,CAAC,CACzB,CACF,CAAC,CAAC,CACDlD,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,GAAC,CACnD,CAAC,IAED,CACEhB,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CACAJ,OAAO,CAACyD,OAAO,CAAC,CAChBrE,cAAc,CAACoE,YAAY,CAAC,CAC9B,CAEA,QAASc,mBAAkB,CAACC,OAAO,CACnC,CACE,GAAIC,IAAG,CAAG,KAAK,CACfD,OAAO,CAACtB,OAAO,CAAC,SAACkB,MAAM,CAAK,CAC1B9E,MAAM,CAAC4D,OAAO,CAAC,SAAClG,KAAK,CAAK,CACxB,GAAIA,KAAK,CAACO,IAAI,GAAK,UAAU,CAAE,CAC7B,GAAImC,OAAO,CAACiE,WAAW,CAAC3G,KAAK,CAACG,CAAC,CAAEH,KAAK,CAACK,CAAC,CAAE+G,MAAM,CAAC/G,CAAC,CAAG+G,MAAM,CAACjH,CAAC,CAAEH,KAAK,CAACM,IAAI,CAAEN,KAAK,CAACO,IAAI,CAAE+B,MAAM,CAAE,KAAK,CAAC,CAAE,CACrGmF,GAAG,CAAG,IAAI,CACZ,CACF,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACF,MAAOA,IAAG,CACZ,CAEA,QAASC,UAAS,CAACC,CAAC,CAAE,CACpB,GAAI,EAAEnG,SAAS,EAAI,WAAW,CAAC,CAAE,CAC/B,GAAMoG,WAAU,CAAGpF,aAAa,CAAC+B,OAAO,CACxC,GAAMsD,QAAO,CAAIF,CAAC,CAACG,MAAO,CAC1B,GAAI3H,EAAC,CAAGkF,IAAI,CAAC0C,KAAK,CAAC,CAACJ,CAAC,CAACK,OAAO,CAAGJ,UAAU,CAACK,UAAU,EAAItI,SAAS,CAAC,CACnE,GAAIU,EAAC,CAAGgF,IAAI,CAAC0C,KAAK,CAAC,CAACJ,CAAC,CAACO,OAAO,CAAGN,UAAU,CAACO,SAAS,EAAIxI,SAAS,CAAC,CAClE,GAAIiI,UAAU,CAAE,CACd,GAAI,CAACC,OAAO,CAACrD,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,CAAE,CAC9CmB,UAAU,CAACzF,CAAC,CAAEE,CAAC,CAAC,CAClB,CAAC,IACI,CACH,GAAImB,SAAS,GAAK,aAAa,CAAE,CAC/B8C,OAAO,CAACyC,GAAG,CAAC,yCAAyC,CAAC,CAAE;AAC1D,CAAC,IACI,CACH,GAAKjE,IAAI,GAAK,OAAO,EAAIZ,YAAY,GAAK,IAAI,EAAMY,IAAI,GAAK,OAAO,EAAIZ,YAAY,GAAK,KAAM,CAAE,CAC/F,GAAM2D,EAAC,CAAG7C,IAAI,CAAC8C,IAAI,CAAC,SAACC,CAAC,QAAKA,EAAC,CAAC9E,CAAC,GAAKd,CAAC,EAAI4F,CAAC,CAACC,CAAC,GAAK3F,CAAC,GAAC,CAClD,GAAIwF,CAAC,CAAE,CACLS,WAAW,CAACT,CAAC,CAAC,CAChB,CAAC,IACI,CACH,GAAGzC,WAAW,EAAI,IAAI,CACtBoD,iBAAiB,CAACrG,CAAC,CAAEE,CAAC,CAAC,CAAC,IAExB,CACE,GAAI+H,WAAU,CAAG,KAAK,CACtB9D,OAAO,CAACyC,GAAG,aAAM5G,CAAC,EAAG,CACrBmE,OAAO,CAACyC,GAAG,aAAM1G,CAAC,EAAG,CACrB+C,WAAW,CAAC8C,OAAO,CAAC,SAACmC,UAAU,CAAG,CAChC/D,OAAO,CAACyC,GAAG,CAACsB,UAAU,CAAC,CACvB,GAAGA,UAAU,CAAClI,CAAC,GAAKE,CAAC,EAAIgI,UAAU,CAAChI,CAAC,GAAKF,CAAC,CAC3C,CACEiI,UAAU,CAAG,IAAI,CACjB,GAAMnC,cAAa,CAAC,EAAE,CACtB,GAAG/D,YAAY,GAAK,KAAK,CACzB,CACE,GAAIoG,MAAK,CAAG,KAAK,CACjBhG,MAAM,CAAC4D,OAAO,CAAC,SAACtF,CAAC,CAAG,CAClB,GAAGA,CAAC,CAACT,CAAC,GAAKE,CAAC,EAAIO,CAAC,CAACP,CAAC,GAAKF,CAAC,CACzB,CACE,GAAGS,CAAC,CAACP,CAAC,GAAK,CAAC,CACZ,CACEO,CAAC,CAACP,CAAC,CAAG,CAAC,CACPiI,KAAK,CAAG,IAAI,CACd,CAAC,IACI,IAAG1H,CAAC,CAACP,CAAC,GAAK,CAAC,CACjB,CACEO,CAAC,CAACP,CAAC,CAAG,CAAC,CACT,CACA4F,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CAAC,IAED,CACE,GAAI,EAAEA,CAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,CAAC,CAAE,CAC7B4F,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CAAC,IAED,CACG0H,KAAK,GAAK,IAAI,CAAI1H,CAAC,CAACP,CAAC,CAAG,CAAC,CAAGO,CAAC,CAACP,CAAC,CAAG,CAAC,CACpC4F,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CACF,CACF,CAAC,CAAC,CACJ,CAAC,IAED,CACE,GAAI0H,OAAK,CAAG,KAAK,CACjBhG,MAAM,CAAC4D,OAAO,CAAC,SAACtF,CAAC,CAAG,CAClB,GAAGA,CAAC,CAACT,CAAC,GAAKE,CAAC,EAAIO,CAAC,CAACP,CAAC,GAAKF,CAAC,CACzB,CACEmE,OAAO,CAACyC,GAAG,CAACnG,CAAC,CAACP,CAAC,CAAC,CAChB,GAAGO,CAAC,CAACP,CAAC,GAAK,CAAC,CACZ,CACEO,CAAC,CAACP,CAAC,CAAG,CAAC,CAET,CAAC,IACI,IAAGO,CAAC,CAACP,CAAC,GAAK,CAAC,CACjB,CACEO,CAAC,CAACP,CAAC,CAAG,CAAC,CACPiI,MAAK,CAAG,IAAI,CACd,CACArC,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CAAC,IAED,CACE,GAAI,EAAEA,CAAC,CAACT,CAAC,GAAK,CAAC,EAAIS,CAAC,CAACP,CAAC,GAAK,CAAC,CAAC,CAAE,CAC7B4F,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CAAC,IAED,CACG0H,MAAK,GAAK,IAAI,CAAI1H,CAAC,CAACP,CAAC,CAAG,CAAC,CAAGO,CAAC,CAACP,CAAC,CAAG,CAAC,CACpC4F,aAAa,CAAC/E,IAAI,CAACN,CAAC,CAAC,CACvB,CACF,CACF,CAAC,CAAC,CACJ,CACA2B,SAAS,CAAC0D,aAAa,CAAC,CACxBhD,OAAO,CAAC,EAAE,CAAC,CACX7B,MAAM,CAACoC,IAAI,CAAC,UAAU,CAACC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,WAAKpC,IAAI,CAAE,CAAE,OAAO,WAAMY,YAAY,EAAI,IAAI,CAAE,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CAClHd,MAAM,CAACoC,IAAI,CAAC,iBAAiB,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpB,MAAM,CAAE2D,aAAa,CAAE3E,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CAC9H,GAAIQ,OAAO,CAACyD,OAAO,CAACF,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAC5F,GAAImC,OAAO,CAAC0D,WAAW,CAACH,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAChGa,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpC,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CACnG,CACF,CAAC,IACI,CACH,GAAIQ,OAAO,CAAC2D,WAAW,CAACJ,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAChGa,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpC,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CACnG,CACF,CACA,GAAGY,IAAI,GAAK,OAAO,CACnBC,OAAO,CAAC,OAAO,CAAC,CAAC,IAEjBA,QAAO,CAAC,OAAO,CAAC,CAChBV,cAAc,CAAC,IAAI,CAAC,CACpBkD,YAAY,CAAC,IAAI,CAAC,CAClBxD,qBAAqB,CAAC,IAAI,CAAC,CAC3BoB,6BAA6B,CAAC,IAAI,CAAC,CACnCE,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CAAC,CAAC,CACF,GAAG,CAAC+E,UAAU,CACd,CACE5B,iBAAiB,CAACrG,CAAC,CAACE,CAAC,CAAC,CACxB,CACF,CACF,CACF,CACF,CACF,CACF,CACF,CACF,CAEC,QAAUkI,YAAW,CAACjI,IAAI,CAAE,CAC3B,GAAIqC,aAAa,CAAE,CACjB,GAAMsD,cAAa,CAAG,EAAE,CACxB3D,MAAM,CAAC4D,OAAO,CAAC,SAAClG,KAAK,CAAK,CACxB,GAAI2C,aAAa,GAAK3C,KAAK,CAAE,CAC3BA,KAAK,CAACM,IAAI,CAAGA,IAAI,CACjBN,KAAK,CAACC,KAAK,CAAI,CAACiC,YAAY,CAAMlC,KAAK,CAACO,IAAI,GAAK,KAAK,4BAAwBD,IAAI,oCAA6BA,IAAI,QAAM,CAAMN,KAAK,CAACO,IAAI,GAAK,KAAK,4BAAwBD,IAAI,oCAA6BA,IAAI,QAAO,CACvNN,KAAK,CAACG,CAAC,CAAGqF,sBAAsB,CAACrF,CAAC,CAClCH,KAAK,CAACK,CAAC,CAAGmF,sBAAsB,CAACnF,CAAC,CAClC4F,aAAa,CAAC/E,IAAI,CAAClB,KAAK,CAAC,CAC3B,CAAC,IAED,CACE,GAAG,EAAEA,KAAK,CAACG,CAAC,GAAKqF,sBAAsB,CAACrF,CAAC,EAAIH,KAAK,CAACK,CAAC,GAAKmF,sBAAsB,CAACnF,CAAC,CAAC,CAClF4F,aAAa,CAAC/E,IAAI,CAAClB,KAAK,CAAC,CAC3B,CACF,CAAC,CAAC,CACFuC,SAAS,CAAC0D,aAAa,CAAC,CACxBhD,OAAO,CAAC,EAAE,CAAC,CACX7B,MAAM,CAACoC,IAAI,CAAC,iBAAiB,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpB,MAAM,CAAE2D,aAAa,CAAE3E,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CAC9H,GAAIQ,OAAO,CAACyD,OAAO,CAACF,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAC5F,GAAImC,OAAO,CAAC0D,WAAW,CAACH,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAChGa,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpC,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CACnG,CACF,CAAC,IACI,CACH,GAAIQ,OAAO,CAAC2D,WAAW,CAACJ,aAAa,CAAE7D,WAAW,CAAC7B,IAAI,GAAK,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,GAAK,IAAI,CAAE,CAChGa,MAAM,CAACoC,IAAI,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpC,IAAI,CAAEA,IAAI,CAAER,KAAK,CAAEoB,YAAY,CAAG,OAAO,CAAG,OAAQ,CAAC,CAAC,CAAC,CACnG,CACF,CACA,GAAGY,IAAI,GAAK,OAAO,CACnBC,OAAO,CAAC,OAAO,CAAC,CAAC,IAEjBA,QAAO,CAAC,OAAO,CAAC,CAChBV,cAAc,CAAC,IAAI,CAAC,CACpBoD,yBAAyB,CAAC,IAAI,CAAC,CAC/B7C,gBAAgB,CAAC,IAAI,CAAC,CACtB2C,YAAY,CAAC,IAAI,CAAC,CAClBxD,qBAAqB,CAAC,IAAI,CAAC,CAC3BoB,6BAA6B,CAAC,IAAI,CAAC,CACnCE,cAAc,CAAC,IAAI,CAAC,CACpBZ,qBAAqB,CAAC8B,OAAO,CAACC,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC,CACvD,CACF,CAEA,QAAS8D,kBAAiB,EAAG,CAC3B,GAAI7F,aAAa,CACf,MAAQ,CAACT,YAAY,CAAKS,aAAa,CAACpC,IAAI,GAAK,KAAK,CAAG,GAAG,CAAG,GAAG,CAAKoC,aAAa,CAACpC,IAAI,GAAK,KAAK,CAAG,GAAG,CAAG,GAAI,CACpH,CAGA,GAAIkI,MAAK,CAAG,EAAE,CAAC,2BAC+B,8BACI,CAC9C,GAAIxI,MAAK,CAAGyI,SAAS,CACrBpG,MAAM,CAAC4D,OAAO,CAAC,SAAAtF,CAAC,CAAI,CAAE,GAAIA,CAAC,CAACT,CAAC,GAAKc,CAAC,EAAIL,CAAC,CAACP,CAAC,GAAK2F,CAAC,CAAE/F,KAAK,CAAGW,CAAC,CAACX,KAAK,CAAC,CAAC,CAAC,CACpE,GAAM0I,UAAS,CAAG3F,IAAI,CAAC8C,IAAI,CAAC,SAACC,CAAC,QAAKA,EAAC,CAAC9E,CAAC,GAAK+E,CAAC,EAAID,CAAC,CAACC,CAAC,GAAK/E,CAAC,GAAC,CAC1DwH,KAAK,CAACvH,IAAI,cAAC,KAAC,IAAI,EAAC,QAAQ,CAAEyH,SAAS,CAAG,IAAI,CAAG,KAAM,CAAC,GAAG,CAAE1H,CAAC,CAAGA,CAAC,CAAG+E,CAAE,CAAC,KAAK,CAAE/F,KAAM,EAAG,CAAC,CACxF,CAAC,CALD,IAAK,GAAI+F,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGpG,cAAc,CAACgJ,MAAM,CAAE,EAAE5C,CAAC,aAMhD,CAAC,CAPD,IAAK,GAAI/E,IAAC,CAAG,CAAC,CAAEA,GAAC,CAAGpB,YAAY,CAAC+I,MAAM,CAAE,EAAE3H,GAAC,cAQ5C,mBACE,wCACE,YAAK,EAAE,CAAC,sBAAsB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAEwB,qBAAsB,uBAC3E,aAAK,SAAS,CAAC,YAAY,wBACzB,YAAK,OAAO,CAAG,yBAAM8F,YAAW,CAAC,MAAM,CAAC,EAAC,CAAC,GAAG,0BAAoBC,iBAAiB,EAAE,aAAY,EAAG,cACnG,YAAK,OAAO,CAAG,yBAAMD,YAAW,CAAC,OAAO,CAAC,EAAC,CAAC,GAAG,0BAAoBC,iBAAiB,EAAE,cAAa,EAAG,cACrG,YAAK,OAAO,CAAG,yBAAMD,YAAW,CAAC,QAAQ,CAAC,EAAC,CAAC,GAAG,0BAAoBC,iBAAiB,EAAE,eAAc,EAAG,cACvG,YAAK,OAAO,CAAG,yBAAMD,YAAW,CAAC,QAAQ,CAAC,EAAC,CAAC,GAAG,0BAAoBC,iBAAiB,EAAE,eAAc,EAAG,GACnG,EACF,cACN,YAAK,oCAAqC,aAAa,CAAE,uBAAAb,CAAC,QAAID,UAAS,CAACC,CAAC,CAAC,EAAE,kCAAkC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAEnF,aAAc,UAC7IiG,KAAK,EACF,cACN,uBAAK,GAAC,mCAAG,uBAAqB,CAAC/G,UAAU,GAAK,GAAM,cACpD,kCACE,eAAQ,GAAG,CAAEmB,kBAAmB,CAAC,OAAO,CAAEqC,gBAAiB,UAAC,YAAU,EAAS,EAC3E,cACN,aAAK,SAAS,CAAC,SAAS,WACrBpC,IAAI,CAAC,UACR,GAAM,cACN,kCACE,qBAAG,YAAU,CAACd,UAAU,GAAK,EACzB,cACN,kCACE,qBAAG,GAAC,CAACJ,WAAW,GAAK,EACjB,GACL,CAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}