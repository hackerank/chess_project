{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  if (!this.io.reconnecting) this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n  this.flags = {};\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n    case parser.ACK:\n      this.onack(packet);\n      break;\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  }\n\n  // remove socket from pool\n  this.destroy();\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","map":{"version":3,"names":["parser","require","Emitter","toArray","on","bind","debug","parseqs","hasBin","module","exports","Socket","events","connect","connect_error","connect_timeout","connecting","disconnect","error","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","ping","pong","emit","prototype","io","nsp","opts","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","query","autoConnect","open","subEvents","subs","readyState","onopen","send","args","arguments","unshift","apply","ev","hasOwnProperty","packet","type","binary","undefined","BINARY_EVENT","EVENT","data","options","compress","length","pop","id","push","encode","CONNECT","onclose","reason","onpacket","sameNamespace","rootNamespaceError","ERROR","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ack","self","sent","emitBuffered","i","destroy","close"],"sources":["C:/Users/think/Desktop/git_projects/chess_project/frontend/chess-frontend/node_modules/socket.io-client/lib/socket.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  if (!this.io.reconnecting) this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}