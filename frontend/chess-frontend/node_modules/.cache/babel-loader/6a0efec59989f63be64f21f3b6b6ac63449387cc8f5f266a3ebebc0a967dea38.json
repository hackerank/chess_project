{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\think\\\\Desktop\\\\Projects\\\\Chess Project\\\\frontend\\\\chess-frontend\\\\src\\\\Components\\\\GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport './GameBoard.css';\nimport Tile from './Tile';\nimport Referee from './Referee';\nimport { GRID_SIZE, horizontalAxis, verticalAxis } from '../constants';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let piece = {\n  image: String,\n  x: Number,\n  y: Number,\n  type: String,\n  team: String,\n  enPassant: Boolean\n};\n\n// array which holds the information regarding initial chess pieces and their \nconst initialBoardState = [];\nexport default function GameBoard(_ref) {\n  _s();\n  let {\n    room,\n    isBlack\n  } = _ref;\n  const SOCKET_URL = `ws://192.168.29.13:8085/?room=${room}`;\n  const socket = useRef(null);\n  const [activePiece, setActivePiece] = useState(null);\n  const [gridX, setGridX] = useState(0);\n  const [gridY, setGridY] = useState(0);\n  const [pieces, setPieces] = useState(initialBoardState);\n  const chessBoardRef = useRef(null);\n  const pawnPromotionModalRef = useRef(null);\n  const referee = new Referee();\n  const [promotionPawn, setPromotionPawn] = useState(null);\n  //state which becomes true if our king is in check\n  const [ourinCheck, setOurInCheck] = useState(false);\n  //state which becomes true if opponent king is in check\n  const [oppinCheck, setOppInCheck] = useState(false);\n  useEffect(() => {\n    // Connect to socket.io server\n    if (!socket.current) socket.current = io(SOCKET_URL);\n\n    // Do something with the socket connection\n\n    // Return the cleanup function\n    return () => {\n      // Close the socket connection\n      socket.current.disconnect();\n    };\n  }, []);\n  for (let p = 0; p < 2; p++) {\n    const teamType = p === 0 ? \"opponent\" : \"our\";\n    const type = !isBlack ? p === 0 ? \"B\" : \"W\" : p === 0 ? \"W\" : \"B\";\n    const pawns_x_cor = p === 0 ? 1 : 6;\n    const main_piece_x_cor = p === 0 ? 0 : 7;\n    //pawns\n    for (let i = 0; i < 8; ++i) {\n      initialBoardState.push({\n        image: `assets/images/${type}_pawn.png`,\n        x: pawns_x_cor,\n        y: i,\n        type: \"pawn\",\n        team: teamType\n      });\n    }\n    //rooks\n    initialBoardState.push({\n      image: `assets/images/${type}_rook.png`,\n      x: main_piece_x_cor,\n      y: 0,\n      type: \"rook\",\n      team: teamType\n    });\n    initialBoardState.push({\n      image: `assets/images/${type}_rook.png`,\n      x: main_piece_x_cor,\n      y: 7,\n      type: \"rook\",\n      team: teamType\n    });\n    //knights\n    initialBoardState.push({\n      image: `assets/images/${type}_knight.png`,\n      x: main_piece_x_cor,\n      y: 1,\n      type: \"knight\",\n      team: teamType\n    });\n    initialBoardState.push({\n      image: `assets/images/${type}_knight.png`,\n      x: main_piece_x_cor,\n      y: 6,\n      type: \"knight\",\n      team: teamType\n    });\n    //bishops\n    initialBoardState.push({\n      image: `assets/images/${type}_bishop.png`,\n      x: main_piece_x_cor,\n      y: 2,\n      type: \"bishop\",\n      team: teamType\n    });\n    initialBoardState.push({\n      image: `assets/images/${type}_bishop.png`,\n      x: main_piece_x_cor,\n      y: 5,\n      type: \"bishop\",\n      team: teamType\n    });\n    //kings\n    initialBoardState.push({\n      image: `assets/images/${type}_king.png`,\n      x: main_piece_x_cor,\n      y: 4,\n      type: \"king\",\n      team: teamType\n    });\n    //queens\n    initialBoardState.push({\n      image: `assets/images/${type}_queen.png`,\n      x: main_piece_x_cor,\n      y: 3,\n      type: \"queen\",\n      team: teamType\n    });\n  }\n  socket.on('serverToClient', data => {\n    setPieces(JSON.parse(data)[\"pieceArr\"]);\n  });\n  socket.on('serverToClientCheck', data => {\n    setOurInCheck(true);\n  });\n  function grabPiece(e) {\n    const chessboard = chessBoardRef.current;\n    const element = e.target;\n    // e.setPointerCapture(e.pointerId);\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\n      setGridX(Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE));\n      setGridY(Math.floor((e.clientY - chessboard.offsetTop) / GRID_SIZE));\n      const x = e.clientX;\n      const y = e.clientY;\n      element.style.position = \"absolute\";\n      element.style.left = `${x - GRID_SIZE / 2}px`;\n      element.style.top = `${y - GRID_SIZE / 2}px`;\n      setActivePiece(element);\n    }\n  }\n  function movePiece(e) {\n    const chessboard = chessBoardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft;\n      const minY = chessboard.offsetTop;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight;\n      const x = e.clientX;\n      const y = e.clientY;\n      activePiece.style.position = \"absolute\";\n      if (x < minX) {\n        activePiece.style.left = `${minX - GRID_SIZE / 2}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX - GRID_SIZE / 2}px`;\n      } else activePiece.style.left = `${x - GRID_SIZE / 2}px`;\n      if (y < minY) {\n        activePiece.style.top = `${minY - GRID_SIZE / 2}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY - GRID_SIZE / 2}px`;\n      } else activePiece.style.top = `${y - GRID_SIZE / 2}px`;\n    }\n  }\n  function dropPiece(e) {\n    const chessboard = chessBoardRef.current;\n    if (activePiece && chessboard) {\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\n      const y = Math.floor((e.clientY - chessboard.offsetTop) / GRID_SIZE);\n      const currentPiece = pieces.find(p => p.y === gridX && p.x === gridY);\n      if (currentPiece) {\n        let updatedPieces = null;\n        const validMove = referee.isValidMove(gridY, gridX, y, x, currentPiece.type, currentPiece.team, pieces);\n        const isEnPassantMove = referee.isEnPassantMove(gridY, gridX, y, x, currentPiece.type, currentPiece.team, pieces);\n        const pawnDirection = \"our\" === currentPiece.team ? 1 : -1;\n        if (isEnPassantMove) {\n          updatedPieces = pieces.reduce((results, piece) => {\n            if (currentPiece === piece) {\n              piece.enPassant = false;\n              piece.x = y;\n              piece.y = x;\n              results.push(piece);\n            } else if (!(piece.x === y + pawnDirection && piece.y === x)) {\n              if (\"pawn\" === piece.type) piece.enPassant = false;\n              results.push(piece);\n            }\n            return results;\n          }, []);\n          setPieces(updatedPieces);\n          socket.emit('clientToServer', JSON.stringify({\n            \"pieceArr\": pieces,\n            \"team\": isBlack ? \"black\" : \"white\"\n          }));\n        } else {\n          const original = [...pieces];\n          if (validMove) {\n            if (\"pawn\" === currentPiece.type) {\n              updatedPieces = pieces.reduce((results, piece) => {\n                if (currentPiece === piece) {\n                  if (piece.type === \"pawn\" && Math.abs(y - gridY) === 2) {\n                    piece.enPassant = true;\n                  } else {\n                    piece.enPassant = false;\n                  }\n                  piece.x = y;\n                  piece.y = x;\n                  if (0 === piece.x || 7 === piece.x) {\n                    setPromotionPawn(currentPiece);\n                    pawnPromotionModalRef.current.classList.remove('hidden');\n                  }\n                  results.push(piece);\n                } else if (!(piece.x === y && piece.y === x)) {\n                  if (\"pawn\" === piece.type) piece.enPassant = false;\n                  results.push(piece);\n                }\n                return results;\n              }, []);\n            } else if (\"knight\" === currentPiece.type || \"bishop\" === currentPiece.type || \"rook\" === currentPiece.type || \"queen\" === currentPiece.type || \"king\" === currentPiece.type) {\n              updatedPieces = pieces.reduce((results, piece) => {\n                if (currentPiece === piece) {\n                  piece.x = y;\n                  piece.y = x;\n                  results.push(piece);\n                } else if (!(piece.x === y && piece.y === x)) {\n                  results.push(piece);\n                }\n                return results;\n              }, []);\n            }\n            setPieces(updatedPieces);\n            socket.emit('clientToServer', JSON.stringify({\n              \"pieceArr\": updatedPieces,\n              \"team\": isBlack ? \"black\" : \"white\"\n            }));\n            if (referee.inCheck(pieces)) {\n              console.log(\"Check\");\n              setOppInCheck(true);\n              socket.emit(\"clientToServerCheck\", \"Check\");\n            }\n          } else {\n            // RESETS  THE PIECE POSITION\n            activePiece.style.position = \"relative\";\n            activePiece.style.removeProperty('top');\n            activePiece.style.removeProperty('left');\n          }\n        }\n      }\n      setActivePiece(null);\n    }\n  }\n  function promotePawn(type) {\n    if (promotionPawn) {\n      const updatedPieces = pieces.reduce((results, piece) => {\n        if (promotionPawn === piece) {\n          piece.type = type;\n          piece.image = !isBlack ? piece.team === \"our\" ? `/assets/images/W_${type}.png` : `/assets/images/B_${type}.png` : piece.team === \"our\" ? `/assets/images/B_${type}.png` : `/assets/images/W_${type}.png`;\n        }\n        results.push(piece);\n        return results;\n      }, []);\n      setPieces(updatedPieces);\n      socket.emit('clientToServer', JSON.stringify({\n        \"pieceArr\": updatedPieces,\n        \"team\": isBlack ? \"black\" : \"white\"\n      }));\n      pawnPromotionModalRef.current.classList.add('hidden');\n    }\n  }\n  function promotionTeamType() {\n    if (promotionPawn) return !isBlack ? promotionPawn.team === \"our\" ? \"W\" : \"B\" : promotionPawn.team === \"our\" ? \"B\" : \"W\";\n  }\n  let board = [];\n  for (let i = 0; i < verticalAxis.length; ++i) {\n    for (let j = 0; j < horizontalAxis.length; ++j) {\n      let image = undefined;\n      pieces.forEach(p => {\n        if (p.x === i && p.y === j) image = p.image;\n      });\n      // board.push(<div className='coordinates'>{`x=${i},y = ${j}`}</div>)\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        num: i * i + j,\n        image: image\n      }, `${i}${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 18\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pawn-promotion-modal\",\n      className: \"hidden\",\n      ref: pawnPromotionModalRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => promotePawn(\"rook\"),\n          src: `/assets/images/${promotionTeamType()}_rook.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => promotePawn(\"queen\"),\n          src: `/assets/images/${promotionTeamType()}_queen.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => promotePawn(\"knight\"),\n          src: `/assets/images/${promotionTeamType()}_knight.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => promotePawn(\"bishop\"),\n          src: `/assets/images/${promotionTeamType()}_bishop.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onPointerMove: e => movePiece(e),\n      onPointerDown: e => grabPiece(e),\n      onPointerUp: e => dropPiece(e),\n      id: \"gameboard\",\n      ref: chessBoardRef,\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(GameBoard, \"yczZErRZCUban7x66FVGFarOAwI=\");\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Tile","Referee","GRID_SIZE","horizontalAxis","verticalAxis","io","piece","image","String","x","Number","y","type","team","enPassant","Boolean","initialBoardState","GameBoard","room","isBlack","SOCKET_URL","socket","activePiece","setActivePiece","gridX","setGridX","gridY","setGridY","pieces","setPieces","chessBoardRef","pawnPromotionModalRef","referee","promotionPawn","setPromotionPawn","ourinCheck","setOurInCheck","oppinCheck","setOppInCheck","current","disconnect","p","teamType","pawns_x_cor","main_piece_x_cor","i","push","on","data","JSON","parse","grabPiece","e","chessboard","element","target","classList","contains","Math","floor","clientX","offsetLeft","clientY","offsetTop","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","updatedPieces","validMove","isValidMove","isEnPassantMove","pawnDirection","reduce","results","emit","stringify","original","abs","remove","inCheck","console","log","removeProperty","promotePawn","add","promotionTeamType","board","length","j","undefined","forEach"],"sources":["C:/Users/think/Desktop/Projects/Chess Project/frontend/chess-frontend/src/Components/GameBoard.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport './GameBoard.css'\r\nimport Tile from './Tile';\r\nimport Referee from './Referee';\r\nimport { GRID_SIZE, horizontalAxis, verticalAxis } from '../constants';\r\nimport io from 'socket.io-client';\r\n\r\nexport let piece = {\r\n  image: String,\r\n  x: Number,\r\n  y: Number,\r\n  type: String,\r\n  team: String,\r\n  enPassant: Boolean\r\n}\r\n\r\n// array which holds the information regarding initial chess pieces and their \r\nconst initialBoardState = [];\r\n\r\nexport default function GameBoard({ room , isBlack}) {\r\n  const SOCKET_URL = `ws://192.168.29.13:8085/?room=${room}`;\r\n  const socket = useRef(null);\r\n  const [activePiece, setActivePiece] = useState(null);\r\n  const [gridX, setGridX] = useState(0);\r\n  const [gridY, setGridY] = useState(0);\r\n  const [pieces, setPieces] = useState(initialBoardState);\r\n  const chessBoardRef = useRef(null);\r\n  const pawnPromotionModalRef = useRef(null);\r\n  const referee = new Referee();\r\n  const [promotionPawn, setPromotionPawn] = useState(null);\r\n  //state which becomes true if our king is in check\r\n  const [ourinCheck, setOurInCheck] = useState(false);\r\n  //state which becomes true if opponent king is in check\r\n  const [oppinCheck, setOppInCheck] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Connect to socket.io server\r\n    if(!socket.current)\r\n    socket.current = io(SOCKET_URL);\r\n\r\n    // Do something with the socket connection\r\n\r\n    // Return the cleanup function\r\n    return () => {\r\n      // Close the socket connection\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  for (let p = 0; p < 2; p++) {\r\n    const teamType = (p === 0) ? \"opponent\" : \"our\";\r\n    const type = (!isBlack) ? ((p === 0) ? \"B\" : \"W\") : ((p === 0) ? \"W\" : \"B\");\r\n    const pawns_x_cor = (p === 0) ? 1 : 6;\r\n    const main_piece_x_cor = (p === 0) ? 0 : 7;\r\n    //pawns\r\n    for (let i = 0; i < 8; ++i) {\r\n      initialBoardState.push({ image: `assets/images/${type}_pawn.png`, x: pawns_x_cor, y: i, type: \"pawn\", team: teamType });\r\n    }\r\n    //rooks\r\n    initialBoardState.push({ image: `assets/images/${type}_rook.png`, x: main_piece_x_cor, y: 0, type: \"rook\", team: teamType });\r\n    initialBoardState.push({ image: `assets/images/${type}_rook.png`, x: main_piece_x_cor, y: 7, type: \"rook\", team: teamType });\r\n    //knights\r\n    initialBoardState.push({ image: `assets/images/${type}_knight.png`, x: main_piece_x_cor, y: 1, type: \"knight\", team: teamType });\r\n    initialBoardState.push({ image: `assets/images/${type}_knight.png`, x: main_piece_x_cor, y: 6, type: \"knight\", team: teamType });\r\n    //bishops\r\n    initialBoardState.push({ image: `assets/images/${type}_bishop.png`, x: main_piece_x_cor, y: 2, type: \"bishop\", team: teamType });\r\n    initialBoardState.push({ image: `assets/images/${type}_bishop.png`, x: main_piece_x_cor, y: 5, type: \"bishop\", team: teamType });\r\n    //kings\r\n    initialBoardState.push({ image: `assets/images/${type}_king.png`, x: main_piece_x_cor, y: 4, type: \"king\", team: teamType });\r\n    //queens\r\n    initialBoardState.push({ image: `assets/images/${type}_queen.png`, x: main_piece_x_cor, y: 3, type: \"queen\", team: teamType });\r\n  }\r\n\r\n  socket.on('serverToClient', (data) => {\r\n    setPieces(JSON.parse(data)[\"pieceArr\"]);\r\n  });\r\n\r\n  socket.on('serverToClientCheck', (data) => {\r\n    setOurInCheck(true);\r\n  });\r\n\r\n  function grabPiece(e) {\r\n    const chessboard = chessBoardRef.current;\r\n    const element = (e.target);\r\n    // e.setPointerCapture(e.pointerId);\r\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\r\n      setGridX(Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE));\r\n      setGridY(Math.floor((e.clientY - chessboard.offsetTop) / GRID_SIZE));\r\n      const x = e.clientX;\r\n      const y = e.clientY;\r\n      element.style.position = \"absolute\";\r\n      element.style.left = `${x - GRID_SIZE / 2}px`;\r\n      element.style.top = `${y - GRID_SIZE / 2}px`;\r\n      setActivePiece(element);\r\n    }\r\n  }\r\n\r\n  function movePiece(e) {\r\n    const chessboard = chessBoardRef.current;\r\n    if (activePiece && chessboard) {\r\n      const minX = chessboard.offsetLeft;\r\n      const minY = chessboard.offsetTop;\r\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth;\r\n      const maxY = chessboard.offsetTop + chessboard.clientHeight;\r\n      const x = e.clientX;\r\n      const y = e.clientY;\r\n      activePiece.style.position = \"absolute\";\r\n\r\n      if (x < minX) {\r\n        activePiece.style.left = `${minX - GRID_SIZE / 2}px`;\r\n      }\r\n      else if (x > maxX) {\r\n        activePiece.style.left = `${maxX - GRID_SIZE / 2}px`;\r\n      }\r\n      else activePiece.style.left = `${x - GRID_SIZE / 2}px`;\r\n\r\n      if (y < minY) {\r\n        activePiece.style.top = `${minY - GRID_SIZE / 2}px`;\r\n      }\r\n      else if (y > maxY) {\r\n        activePiece.style.top = `${maxY - GRID_SIZE / 2}px`;\r\n\r\n      }\r\n      else activePiece.style.top = `${y - GRID_SIZE / 2}px`;\r\n    }\r\n  }\r\n\r\n  function dropPiece(e) {\r\n    const chessboard = chessBoardRef.current;\r\n    if (activePiece && chessboard) {\r\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / GRID_SIZE);\r\n      const y = Math.floor((e.clientY - chessboard.offsetTop) / GRID_SIZE);\r\n      const currentPiece = pieces.find(p => p.y === gridX && p.x === gridY);\r\n      if (currentPiece) {\r\n        let updatedPieces = null;\r\n        const validMove = referee.isValidMove(gridY, gridX, y, x, currentPiece.type, currentPiece.team, pieces);\r\n        const isEnPassantMove = referee.isEnPassantMove(gridY, gridX, y, x, currentPiece.type, currentPiece.team, pieces);\r\n        const pawnDirection = \"our\" === currentPiece.team ? 1 : -1;\r\n        if (isEnPassantMove) {\r\n          updatedPieces = pieces.reduce((results, piece) => {\r\n            if (currentPiece === piece) {\r\n              piece.enPassant = false;\r\n              piece.x = y;\r\n              piece.y = x;\r\n              results.push(piece);\r\n            }\r\n            else if (!(piece.x === y + pawnDirection && piece.y === x)) {\r\n              if (\"pawn\" === piece.type)\r\n                piece.enPassant = false;\r\n              results.push(piece);\r\n            }\r\n            return results;\r\n          }, []);\r\n          setPieces(updatedPieces);\r\n          socket.emit('clientToServer', JSON.stringify({ \"pieceArr\": pieces, \"team\": isBlack ? \"black\" : \"white\" }));\r\n        }\r\n        else {\r\n          const original = [...pieces];\r\n          if (validMove) {\r\n            if (\"pawn\" === currentPiece.type) {\r\n              updatedPieces = pieces.reduce((results, piece) => {\r\n                if (currentPiece === piece) {\r\n                  if (piece.type === \"pawn\" && Math.abs(y - gridY) === 2) {\r\n                    piece.enPassant = true;\r\n                  }\r\n                  else {\r\n                    piece.enPassant = false;\r\n                  }\r\n                  piece.x = y;\r\n                  piece.y = x;\r\n                  if (0 === piece.x || 7 === piece.x) {\r\n                    setPromotionPawn(currentPiece);\r\n                    pawnPromotionModalRef.current.classList.remove('hidden');\r\n                  }\r\n                  results.push(piece);\r\n                }\r\n                else if (!(piece.x === y && piece.y === x)) {\r\n                  if (\"pawn\" === piece.type)\r\n                    piece.enPassant = false;\r\n                  results.push(piece);\r\n                }\r\n                return results;\r\n              }, []);\r\n            }\r\n            else if (\"knight\" === currentPiece.type || \"bishop\" === currentPiece.type || \"rook\" === currentPiece.type || \"queen\" === currentPiece.type || \"king\" === currentPiece.type) {\r\n              updatedPieces = pieces.reduce((results, piece) => {\r\n                if (currentPiece === piece) {\r\n                  piece.x = y;\r\n                  piece.y = x;\r\n                  results.push(piece);\r\n                }\r\n                else if (!(piece.x === y && piece.y === x)) {\r\n                  results.push(piece);\r\n                }\r\n                return results;\r\n              }, []);\r\n            }\r\n            setPieces(updatedPieces);\r\n            socket.emit('clientToServer', JSON.stringify({ \"pieceArr\": updatedPieces, \"team\": isBlack ? \"black\" : \"white\" }));\r\n            if (referee.inCheck(pieces)) {\r\n              console.log(\"Check\");\r\n              setOppInCheck(true);\r\n              socket.emit(\"clientToServerCheck\", \"Check\");\r\n            }\r\n          }\r\n          else {\r\n            // RESETS  THE PIECE POSITION\r\n            activePiece.style.position = \"relative\";\r\n            activePiece.style.removeProperty('top');\r\n            activePiece.style.removeProperty('left');\r\n          }\r\n        }\r\n\r\n      }\r\n      setActivePiece(null);\r\n    }\r\n  }\r\n\r\n  function promotePawn(type) {\r\n    if (promotionPawn) {\r\n      const updatedPieces = pieces.reduce((results, piece) => {\r\n        if (promotionPawn === piece) {\r\n          piece.type = type;\r\n          piece.image = (!isBlack) ? ((piece.team === \"our\") ? `/assets/images/W_${type}.png` : `/assets/images/B_${type}.png`) : ((piece.team === \"our\") ? `/assets/images/B_${type}.png` : `/assets/images/W_${type}.png`);\r\n        }\r\n        results.push(piece);\r\n        return results;\r\n      }, []);\r\n      setPieces(updatedPieces);\r\n      socket.emit('clientToServer', JSON.stringify({ \"pieceArr\": updatedPieces, \"team\": isBlack ? \"black\" : \"white\" }));\r\n      pawnPromotionModalRef.current.classList.add('hidden');\r\n    }\r\n  }\r\n\r\n  function promotionTeamType() {\r\n    if (promotionPawn)\r\n      return (!isBlack) ? (promotionPawn.team === \"our\" ? \"W\" : \"B\") : (promotionPawn.team === \"our\" ? \"B\" : \"W\");\r\n  }\r\n\r\n  let board = [];\r\n  for (let i = 0; i < verticalAxis.length; ++i) {\r\n    for (let j = 0; j < horizontalAxis.length; ++j) {\r\n      let image = undefined;\r\n      pieces.forEach(p => { if (p.x === i && p.y === j) image = p.image });\r\n      // board.push(<div className='coordinates'>{`x=${i},y = ${j}`}</div>)\r\n      board.push(<Tile key={`${i}${j}`} num={i * i + j} image={image} />);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"pawn-promotion-modal\" className='hidden' ref={pawnPromotionModalRef}>\r\n        <div className='modal-body' >\r\n          <img onClick={() => promotePawn(\"rook\")} src={`/assets/images/${promotionTeamType()}_rook.png`} />\r\n          <img onClick={() => promotePawn(\"queen\")} src={`/assets/images/${promotionTeamType()}_queen.png`} />\r\n          <img onClick={() => promotePawn(\"knight\")} src={`/assets/images/${promotionTeamType()}_knight.png`} />\r\n          <img onClick={() => promotePawn(\"bishop\")} src={`/assets/images/${promotionTeamType()}_bishop.png`} />\r\n        </div>\r\n\r\n      </div>\r\n      <div onPointerMove={e => movePiece(e)} onPointerDown={e => grabPiece(e)} onPointerUp={e => dropPiece(e)} id=\"gameboard\" ref={chessBoardRef}>\r\n        {board}\r\n      </div>\r\n    </>\r\n\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}