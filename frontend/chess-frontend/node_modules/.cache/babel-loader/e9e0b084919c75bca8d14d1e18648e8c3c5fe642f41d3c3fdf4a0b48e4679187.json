{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\think\\\\Desktop\\\\git_projects\\\\chess_project\\\\frontend\\\\chess-frontend\\\\src\\\\Components\\\\Room.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport GameBoard from './GameBoard';\nimport { useLocation } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const data = useLocation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GameBoard, {\n      room: data.state.roomId,\n      isBlack: data.state.color === 'B' ? true : false\n    }, data.state.roomId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Room, \"8Hh8xoLmbdSI2bv9CuVxzalNflE=\", false, function () {\n  return [useLocation];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","GameBoard","useLocation","Room","data","state","roomId","color"],"sources":["C:/Users/think/Desktop/git_projects/chess_project/frontend/chess-frontend/src/Components/Room.jsx"],"sourcesContent":["import React from 'react';\r\nimport GameBoard from './GameBoard';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function Room() {\r\n  const data = useLocation();\r\n  return (\r\n    <>\r\n      <GameBoard key={data.state.roomId} room={data.state.roomId} isBlack={data.state.color === 'B'?true:false} />\r\n    </>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAAA;AAE/C,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAMC,IAAI,GAAGF,WAAW,EAAE;EAC1B,oBACE;IAAA,uBACE,QAAC,SAAS;MAAyB,IAAI,EAAEE,IAAI,CAACC,KAAK,CAACC,MAAO;MAAC,OAAO,EAAEF,IAAI,CAACC,KAAK,CAACE,KAAK,KAAK,GAAG,GAAC,IAAI,GAAC;IAAM,GAAzFH,IAAI,CAACC,KAAK,CAACC,MAAM;MAAA;MAAA;MAAA;IAAA;EAA2E,iBAC3G;AAEP;AAAC,GAPuBH,IAAI;EAAA,QACbD,WAAW;AAAA;AAAA,KADFC,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}